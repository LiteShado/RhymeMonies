{"ast":null,"code":"var _jsxFileName = \"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/SongChoice.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport env from 'react-dotenv'; // import {useParams} from 'react-router-dom'\n// import {Link} from 'react-router-dom'\n\nimport { localStorage } from 'use-local-storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongChoice = props => {\n  _s();\n\n  const [song, setSong] = useState({}); // const params = useParams()\n\n  console.log(props.song.id);\n  console.log({\n    props\n  });\n\n  const fetchSong = () => {\n    axios.get(`${env.API_URL}/songs`).then(response => {\n      setSong(response.data);\n      console.log(props.id);\n      console.log(props.song.id); // console.log(props.song.id)\n\n      console.log(response.data.song);\n      console.log(response);\n      setSong(response.data.song);\n      console.log(response.data.song);\n    });\n  }; // localStorage.setItem('title', response.data.song.title);        localStorage.setItem('genre', response.data.song.genre);\n\n\n  useEffect(fetchSong, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Title: \", song.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Genre: \", song.genre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SongChoice, \"VaAakcKOouOH8dMhT+WLVWlQ5pM=\");\n\n_c = SongChoice;\nexport default SongChoice;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongChoice\");","map":{"version":3,"sources":["/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/SongChoice.js"],"names":["useEffect","useState","axios","env","localStorage","SongChoice","props","song","setSong","console","log","id","fetchSong","get","API_URL","then","response","data","title","genre"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB,C,CACA;AACA;;AACA,SAASC,YAAT,QAA6B,mBAA7B;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC,CAD0B,CAE1B;;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACC,IAAN,CAAWI,EAAvB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACJ,IAAAA;AAAD,GAAZ;;AAGA,QAAMM,SAAS,GAAG,MAAM;AACxBV,IAAAA,KAAK,CAACW,GAAN,CAAW,GAAEV,GAAG,CAACW,OAAQ,QAAzB,EACCC,IADD,CACOC,QAAD,IAAc;AACpBR,MAAAA,OAAO,CAACQ,QAAQ,CAACC,IAAV,CAAP;AAEQR,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,EAAlB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACC,IAAN,CAAWI,EAAvB,EAJY,CAKZ;;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYM,QAAQ,CAACC,IAAT,CAAcV,IAA1B;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AACAR,MAAAA,OAAO,CAACQ,QAAQ,CAACC,IAAT,CAAcV,IAAf,CAAP;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYM,QAAQ,CAACC,IAAT,CAAcV,IAA1B;AACH,KAXL;AAYC,GAbD,CAP0B,CAqBtB;;;AAEJP,EAAAA,SAAS,CAACY,SAAD,EAAY,EAAZ,CAAT;AAEA,sBACI;AAAA,4BAEI;AAAA,4BAAaL,IAAI,CAACW,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,4BAAaX,IAAI,CAACY,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAjCD;;GAAMd,U;;KAAAA,U;AAkCN,eAAeA,UAAf","sourcesContent":["import {useEffect, useState} from 'react'\nimport axios from 'axios'\nimport env from 'react-dotenv'\n// import {useParams} from 'react-router-dom'\n// import {Link} from 'react-router-dom'\nimport { localStorage } from 'use-local-storage'\n\nconst SongChoice = (props) => {\n    const [song, setSong] = useState({})\n    // const params = useParams()\n    console.log(props.song.id)\n    console.log({props})\n\n    \n    const fetchSong = () => {\n    axios.get(`${env.API_URL}/songs`)\n    .then((response) => {\n    setSong(response.data)\n\n            console.log(props.id)\n            console.log(props.song.id)\n            // console.log(props.song.id)\n            console.log(response.data.song)\n            console.log(response)\n            setSong(response.data.song)\n            console.log(response.data.song)\n        })\n    }\n        // localStorage.setItem('title', response.data.song.title);        localStorage.setItem('genre', response.data.song.genre);\n\n    useEffect(fetchSong, [])\n\n    return (\n        <div>\n        {/* <h1>Created by Members of the Community!</h1> */}\n            <div>Title: {song.title}</div>\n            <div>Genre: {song.genre}</div>\n            {/* <Link to={`/songs/${props.id}/lyrics`}>View Lyrics</Link> */}\n        </div>\n    )\n}\nexport default SongChoice\n"]},"metadata":{},"sourceType":"module"}