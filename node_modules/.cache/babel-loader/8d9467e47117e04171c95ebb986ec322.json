{"ast":null,"code":"var _jsxFileName = \"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/New.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst New = () => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  const submitQuestion = async e => {\n    e.preventDefault();\n\n    try {\n      let auth = localStorage.getItem('userId');\n      let res = await axios.post('http://localhost:3001/api/post/create', {\n        title: title,\n        description: description\n      }, {\n        headers: {\n          authorization: auth\n        }\n      });\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a new question!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitQuestion,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(New, \"1UKQWTfo2RWmkwPNsekAdQbvqFk=\");\n\n_c = New;\nexport default New;\n\nvar _c;\n\n$RefreshReg$(_c, \"New\");","map":{"version":3,"sources":["/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/New.js"],"names":["useState","axios","New","title","setTitle","description","setDescription","submitQuestion","e","preventDefault","auth","localStorage","getItem","res","post","headers","authorization","console","log","error","target","value"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMO,cAAc,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACA,UAAIC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX;AACA,UAAIC,GAAG,GAAG,MAAMZ,KAAK,CAACa,IAAN,CAAW,uCAAX,EAEhB;AACIX,QAAAA,KAAK,EAAEA,KADX;AAEIE,QAAAA,WAAW,EAAEA;AAFjB,OAFgB,EAMhB;AACIU,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAACN;AADT;AADb,OANgB,CAAhB;AAYAO,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACH,KAfD,CAeE,OAAOM,KAAP,EAAc;AACbF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACF;AACJ,GApBD;;AAsBA,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAM,MAAA,QAAQ,EAAEZ,cAAhB;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,OAA/B;AAAuC,QAAA,KAAK,EAAEJ,KAA9C;AAAqD,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACY,MAAF,CAASC,KAAV;AAA9E;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,aAA/B;AAA6C,QAAA,KAAK,EAAEhB,WAApD;AAAiE,QAAA,QAAQ,EAAGG,CAAD,IAAOF,cAAc,CAACE,CAAC,CAACY,MAAF,CAASC,KAAV;AAAhG;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AAUH,CApCD;;GAAMnB,G;;KAAAA,G;AAsCN,eAAeA,GAAf","sourcesContent":["import {useState} from 'react'\nimport axios from 'axios'\n\nconst New = () => {\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n\n    const submitQuestion = async (e) => {\n        e.preventDefault()\n        try {\n            let auth = localStorage.getItem('userId')\n            let res = await axios.post('http://localhost:3001/api/post/create',\n\n            {\n                title: title,\n                description: description\n            },\n            {\n                headers: {\n                    authorization:auth\n                }\n            })\n\n            console.log(res)\n        } catch (error) {\n           console.log(error)\n        }\n    }\n\n    return (\n        <>\n        <h1>Create a new question!</h1>\n        <form onSubmit={submitQuestion}>\n            <input type=\"text\" placeholder=\"title\" value={title} onChange={(e) => setTitle(e.target.value)} />\n            <input type=\"text\" placeholder=\"description\" value={description} onChange={(e) => setDescription(e.target.value)} />\n            <input type=\"submit\" value=\"submit\" />\n        </form>\n        </>\n    )\n}\n\nexport default New\n"]},"metadata":{},"sourceType":"module"}