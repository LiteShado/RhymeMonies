{"ast":null,"code":"var _jsxFileName = \"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/Lyric.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from 'react';\nimport { UserContext } from '../context/UserContext';\nimport axios from 'axios'; // import Music from '../components/Music'\n// import '../css/Music.css'\n\nimport env from 'react-dotenv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Lyric = props => {\n  _s();\n\n  const {\n    userState\n  } = useContext(UserContext);\n  const [song, setSong] = userState;\n  const [testLyric, setTestLyric] = useState('');\n  const [lyric, setLyric] = useState(null);\n  const [userId, setUserId] = useState('');\n  const [songId, setSongId] = useState('');\n  console.log(props.match.params.id);\n  console.log(props);\n  const [lyrics, setLyrics] = useState('');\n\n  const get = async () => {\n    try {\n      const lyric = await axios.get(`${env.API_URL}/lyrics/${props.match.params.id}`);\n      console.log(lyric);\n      let i;\n      const array = lyric.data.lyrics;\n      setLyric(array);\n      console.log(array);\n\n      for (i = 0; i < array.length; i++) {\n        console.log(array[i].lyric); // setLyric(array[i].lyric)\n\n        console.log(lyric);\n      }\n\n      console.log(array);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    get();\n  }, []);\n\n  const signupSubmit = async e => {\n    // e.preventDefault()\n    // let user = localStorage.getItem('userId')\n    let id = localStorage.getItem('userId');\n    let idd = props.match.params.id;\n    console.log(id);\n    console.log(idd);\n    console.log(get);\n    let res = await axios.post(`${env.API_URL}/lyrics/${props.match.params.id}`, {\n      lyric: testLyric,\n      userId: id,\n      songId: idd\n    });\n    console.log(res); // localStorage.setItem('lyric', res.data.song.lyric)\n\n    setSong(res.data.song);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Check Out These Lyrics!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: lyric && lyric.map((res, i) => {\n        console.log(lyrics);\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"lyricList\",\n          children: res.lyric\n        }, res.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Your Lyrics To The Song!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: signupSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"lyric\",\n        type: \"text\",\n        value: testLyric,\n        onChange: e => setTestLyric(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"userId\",\n        type: \"hidden\",\n        placeholder: \"UserId\",\n        value: userId,\n        onChange: e => setUserId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"songId\",\n        type: \"hidden\",\n        placeholder: \"SongId\",\n        value: songId,\n        onChange: e => setUserId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true); //         axios.get(`${env.API_URL}/songs/${params.id}/lyrics`).then((response) => {\n  //            console.log(response)\n  //            setAllLyric(response.data)\n  //        })\n  // }\n  //     useEffect(getAllLyric, [])\n  //     const [lyric, setLyric] = useState({\n  //         lyric: ''\n  //     })\n  //     const handleChange = (e) => {\n  //         const { name, value } = e.target\n  //         setLyric({\n  //             ...lyric,\n  //             [name]: value\n  //         })\n  //     }\n  //     const handleSubmit = (e) => {\n  //         e.preventDefault()\n  //         axios.post(`${env.API_URL}/songs/${params.id}/lyrics`, lyric).then((response) => {\n  //             console.log(response);\n  //         })\n  //         setShouldRedirect(response.data.id)\n  //         }\n  // const [lyric, setLyric] = useState({})\n  // return (\n  // <div>\n  // <h1>Here Are the Lyrics</h1>\n  // <ul>\n  //     <div>\n  //         {allLyric.map((lyric) => {\n  //             return (\n  //             <div>\n  //                 <li key={lyric.id}>\n  //                     <Link to={`/songs/${params.id}/lyrics`}>{lyric.lyric}</Link>\n  //                 </li>\n  //                     <Link to={`/songs/${params.id}/lyrics`}>View Lyrics</Link>\n  //             </div>\n  //             )\n  //             })}\n  //             </div>\n  // <h1>Add Your Lyrics:</h1>\n  //     <form onSubmit={handleSubmit}>\n  //         <div>\n  //             <label htmlFor=\"new-lyric\">Lyrics:</label>\n  //             <input type=\"text\" placeholder=\"lyrics\" name=\"lyric\" value={lyric.lyric} onChange={handleChange}\n  //             />\n  //         </div>\n  //     <input type=\"submit\" value=\"submit\" />\n  //     </form>\n  // </ul>\n  // </div>\n  //         )\n};\n\n_s(Lyric, \"R7qIgBb2K5E4VlNTcshSF3Xyw2I=\");\n\n_c = Lyric;\nexport default Lyric;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lyric\");","map":{"version":3,"sources":["/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/Lyric.js"],"names":["useEffect","useState","useContext","UserContext","axios","env","Lyric","props","userState","song","setSong","testLyric","setTestLyric","lyric","setLyric","userId","setUserId","songId","setSongId","console","log","match","params","id","lyrics","setLyrics","get","API_URL","i","array","data","length","error","signupSubmit","e","localStorage","getItem","idd","res","post","map","target","value"],"mappings":"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","sourcesContent":["import {useEffect, useState, useContext} from 'react'\nimport {UserContext} from '../context/UserContext'\nimport axios from 'axios'\n// import Music from '../components/Music'\n// import '../css/Music.css'\nimport env from 'react-dotenv'\n\n\nconst Lyric = (props) => {\n\n    const {userState} = useContext(UserContext)\n    const [song,setSong] = userState\n    const [testLyric,setTestLyric] = useState('')\n\n\n\n    const [lyric,setLyric] = useState(null)\n    const [userId,setUserId] = useState('')\n    const [songId,setSongId] = useState('')\n    console.log(props.match.params.id)\n    console.log(props)\n\n    const [lyrics, setLyrics] = useState('')\n\n    const get = async() => {\n        try {\n\n        const lyric = await axios.get(`${env.API_URL}/lyrics/${props.match.params.id}`)\n\n        console.log(lyric)\n\n        let i\n\n        const array = lyric.data.lyrics\n        setLyric(array)\n        console.log(array)\n\n\n        for (i = 0; i<array.length; i++) {\n            console.log(array[i].lyric)\n            // setLyric(array[i].lyric)\n            console.log(lyric)\n        }\n\n        console.log(array)\n\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    useEffect(() => {\n        get()\n    }, [])\n\n\n    const signupSubmit = async (e) => {\n        // e.preventDefault()\n        // let user = localStorage.getItem('userId')\n        let id = localStorage.getItem('userId')\n        let idd = props.match.params.id\n\n\n        console.log(id)\n        console.log(idd)\n\n\n        console.log(get)\n\n        let res = await axios.post(`${env.API_URL}/lyrics/${props.match.params.id}`, {\n            lyric: testLyric,\n            userId: id,\n            songId: idd\n        })\n        console.log(res)\n        // localStorage.setItem('lyric', res.data.song.lyric)\n\n        setSong(res.data.song)\n    }\n\n    return (\n        <>\n                <h1>Check Out These Lyrics!!</h1>\n            <>\n\n                {lyric && lyric.map((res, i) => {\n                    console.log(lyrics)\n\n                return (\n                    <li className=\"lyricList\" key={res.id}>\n                        {res.lyric}\n                    </li>\n                )\n                })}\n            </>\n\n\n                <h1>Add Your Lyrics To The Song!</h1>\n                <form onSubmit={signupSubmit}>\n                    <input name=\"lyric\" type=\"text\" value={testLyric} onChange={(e) => setTestLyric(e.target.value)} />\n\n                    <input name=\"userId\" type=\"hidden\" placeholder=\"UserId\" value={userId} onChange={(e) => setUserId(e.target.value)} />\n\n                    <input name=\"songId\" type=\"hidden\" placeholder=\"SongId\" value={songId} onChange={(e) => setUserId(e.target.value)} />\n\n                    <input type=\"submit\" value=\"submit\" />\n                </form>\n\n        </>\n    )\n\n\n//         axios.get(`${env.API_URL}/songs/${params.id}/lyrics`).then((response) => {\n//            console.log(response)\n//            setAllLyric(response.data)\n//        })\n// }\n//     useEffect(getAllLyric, [])\n\n//     const [lyric, setLyric] = useState({\n//         lyric: ''\n//     })\n\n//     const handleChange = (e) => {\n//         const { name, value } = e.target\n//         setLyric({\n//             ...lyric,\n//             [name]: value\n//         })\n//     }\n\n//     const handleSubmit = (e) => {\n//         e.preventDefault()\n//         axios.post(`${env.API_URL}/songs/${params.id}/lyrics`, lyric).then((response) => {\n//             console.log(response);\n//         })\n//         setShouldRedirect(response.data.id)\n//         }\n\n// const [lyric, setLyric] = useState({})\n\n\n\n        // return (\n            // <div>\n            // <h1>Here Are the Lyrics</h1>\n            // <ul>\n            //     <div>\n            //         {allLyric.map((lyric) => {\n            //             return (\n            //             <div>\n            //                 <li key={lyric.id}>\n            //                     <Link to={`/songs/${params.id}/lyrics`}>{lyric.lyric}</Link>\n            //                 </li>\n            //                     <Link to={`/songs/${params.id}/lyrics`}>View Lyrics</Link>\n\n            //             </div>\n            //             )\n            //             })}\n            //             </div>\n                // <h1>Add Your Lyrics:</h1>\n                //     <form onSubmit={handleSubmit}>\n                //         <div>\n                //             <label htmlFor=\"new-lyric\">Lyrics:</label>\n                //             <input type=\"text\" placeholder=\"lyrics\" name=\"lyric\" value={lyric.lyric} onChange={handleChange}\n                //             />\n                //         </div>\n\n                //     <input type=\"submit\" value=\"submit\" />\n\n                //     </form>\n       // </ul>\n            // </div>\n//         )\n\n}\nexport default Lyric\n"]},"metadata":{},"sourceType":"module"}