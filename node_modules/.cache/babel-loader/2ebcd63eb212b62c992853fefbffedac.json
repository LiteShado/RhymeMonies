{"ast":null,"code":"var _jsxFileName = \"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/New.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport env from \"react-dotenv\";\nimport { localStorage } from './useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst New = () => {\n  _s();\n\n  const [shouldRedirect, setShouldRedirect] = useState(null);\n  const [song, setSong] = useState({\n    title: '',\n    genre: '',\n    userId: useLocalS(\"userId\")\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSong({ ...song,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const res = await axios.post(`${env.API_URL}/songs/new`, song);\n    console.log(song);\n    console.log(res); // setShouldRedirect(res.data.id)\n  }; // const [song, setSong] = useState({})\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [shouldRedirect && /*#__PURE__*/_jsxDEV(Redirect, {\n      to: `/users/profile`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Submit a New Song to the Community!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"new-title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"title\",\n          name: \"title\",\n          value: song.title,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"new-genre\",\n          children: \"Genre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"genre\",\n          name: \"genre\",\n          value: song.genre,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"userId\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"hidden\",\n          placeholder: \"userId\",\n          name: \"userId\",\n          value: song.userId,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(New, \"3TKo71X0MGIuhlll6IcJ3BfBWyA=\", true);\n\n_c = New;\nexport default New;\n\nvar _c;\n\n$RefreshReg$(_c, \"New\");","map":{"version":3,"sources":["/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/New.js"],"names":["useState","axios","Redirect","useHistory","env","localStorage","New","shouldRedirect","setShouldRedirect","song","setSong","title","genre","userId","useLocalS","handleChange","e","name","value","target","handleSubmit","preventDefault","res","post","API_URL","console","log"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport axios from 'axios'\nimport { Redirect, useHistory } from 'react-router-dom'\nimport env from \"react-dotenv\"\nimport {localStorage} from './useLocalStorage'\n\nconst New = () => {\n    const [shouldRedirect, setShouldRedirect] =\n    useState(null)\n\n\n\n    const [song, setSong] = useState({\n        title: '',\n        genre: '',\n        userId: useLocalS(\"userId\")\n    })\n\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n        setSong({\n            ...song,\n            [name]: value\n        })\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        const res = await axios.post(`${env.API_URL}/songs/new`, song)\n        console.log(song)\n        console.log(res)\n        // setShouldRedirect(res.data.id)\n    }\n\n// const [song, setSong] = useState({})\n\nreturn (\n        <div>\n            { shouldRedirect &&\n            <Redirect to={`/users/profile`} /> }\n\n        <h1>Submit a New Song to the Community!</h1>\n        <form onSubmit={handleSubmit}>\n            <div>\n                <label htmlFor=\"new-title\">Title:</label>\n                <input type=\"text\" placeholder=\"title\" name=\"title\" value={song.title} onChange={handleChange}\n                />\n            </div>\n\n            <div>\n                <label htmlFor=\"new-genre\">Genre:</label>\n                <input type=\"text\" placeholder=\"genre\" name=\"genre\" value={song.genre} onChange={handleChange}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"userId\"></label>\n                <input type=\"hidden\" placeholder=\"userId\" name=\"userId\" value={song.userId} onChange={handleChange}\n                />\n            </div>\n            <input type=\"submit\" value=\"submit\" />\n\n        </form>\n\n        </div>\n    )\n}\n\n\nexport default New\n"]},"metadata":{},"sourceType":"module"}