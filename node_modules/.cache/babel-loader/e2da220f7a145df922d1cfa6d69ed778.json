{"ast":null,"code":"var _jsxFileName = \"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/New.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport env from \"react-dotenv\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst New = () => {\n  _s();\n\n  const [shouldRedirect, setShouldRedirect] = useState(null);\n  const [song, setSong] = useState({\n    title: '',\n    genre: '',\n    userId: ''\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSong({ ...song,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const res = await axios.post(`${env.API_URL}/songs/new`, song);\n    console.log(res);\n  };\n\n  setShouldRedirect(res.data.id); // const [song, setSong] = useState({})\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [shouldRedirect && /*#__PURE__*/_jsxDEV(Redirect, {\n      to: `/songs/${shouldRedirect}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Submit a New Song to the Community!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"new-title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"title\",\n          name: \"title\",\n          value: song.title,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"new-genre\",\n          children: \"Genre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"genre\",\n          name: \"genre\",\n          value: song.genre,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(New, \"Vz+OVyQWLrgoOe/2N5+9mmBgJrQ=\");\n\n_c = New;\nexport default New;\n\nvar _c;\n\n$RefreshReg$(_c, \"New\");","map":{"version":3,"sources":["/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/New.js"],"names":["useState","axios","Redirect","useHistory","env","New","shouldRedirect","setShouldRedirect","song","setSong","title","genre","userId","handleChange","e","name","value","target","handleSubmit","preventDefault","res","post","API_URL","console","log","data","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;AACA,OAAOC,GAAP,MAAgB,cAAhB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IACNP,QAAQ,CAAC,IAAD,CADR;AAGA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC;AAC7BU,IAAAA,KAAK,EAAE,EADsB;AAE7BC,IAAAA,KAAK,EAAE,EAFsB;AAG7BC,IAAAA,MAAM,EAAE;AAHqB,GAAD,CAAhC;;AAMA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAR,IAAAA,OAAO,CAAC,EACJ,GAAGD,IADC;AAEJ,OAACO,IAAD,GAAQC;AAFJ,KAAD,CAAP;AAIH,GAND;;AAQA,QAAME,YAAY,GAAG,MAAOJ,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACK,cAAF;AACA,UAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACoB,IAAN,CAAY,GAAEjB,GAAG,CAACkB,OAAQ,YAA1B,EAAuCd,IAAvC,CAAlB;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACC,GAJL;;AAKIb,EAAAA,iBAAiB,CAACa,GAAG,CAACK,IAAJ,CAASC,EAAV,CAAjB,CAvBU,CAyBlB;;AAEA,sBACQ;AAAA,eACMpB,cAAc,iBAChB,QAAC,QAAD;AAAU,MAAA,EAAE,EAAG,UAASA,cAAe;AAAvC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA,eAKA;AAAM,MAAA,QAAQ,EAAEY,YAAhB;AAAA,8BACI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,OAA/B;AAAuC,UAAA,IAAI,EAAC,OAA5C;AAAoD,UAAA,KAAK,EAAEV,IAAI,CAACE,KAAhE;AAAuE,UAAA,QAAQ,EAAEG;AAAjF;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,OAA/B;AAAuC,UAAA,IAAI,EAAC,OAA5C;AAAoD,UAAA,KAAK,EAAEL,IAAI,CAACG,KAAhE;AAAuE,UAAA,QAAQ,EAAEE;AAAjF;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAYI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALA;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAwBC,CAnDD;;GAAMR,G;;KAAAA,G;AAsDN,eAAeA,GAAf","sourcesContent":["import { useState } from 'react'\nimport axios from 'axios'\nimport { Redirect, useHistory } from 'react-router-dom'\nimport env from \"react-dotenv\"\n\nconst New = () => {\n    const [shouldRedirect, setShouldRedirect] =\n    useState(null)\n\n    const [song, setSong] = useState({\n        title: '',\n        genre: '',\n        userId: ''\n    })\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n        setSong({\n            ...song,\n            [name]: value\n        })\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        const res = await axios.post(`${env.API_URL}/songs/new`, song)\n        console.log(res);\n        }\n        setShouldRedirect(res.data.id)\n\n// const [song, setSong] = useState({})\n\nreturn (\n        <div>\n            { shouldRedirect &&\n            <Redirect to={`/songs/${shouldRedirect}`} /> }\n\n        <h1>Submit a New Song to the Community!</h1>\n        <form onSubmit={handleSubmit}>\n            <div>\n                <label htmlFor=\"new-title\">Title:</label>\n                <input type=\"text\" placeholder=\"title\" name=\"title\" value={song.title} onChange={handleChange}\n                />\n            </div>\n\n            <div>\n                <label htmlFor=\"new-genre\">Genre:</label>\n                <input type=\"text\" placeholder=\"genre\" name=\"genre\" value={song.genre} onChange={handleChange}\n                />\n            </div>\n            <input type=\"submit\" value=\"submit\" />\n\n        </form>\n\n        </div>\n    )\n}\n\n\nexport default New\n"]},"metadata":{},"sourceType":"module"}