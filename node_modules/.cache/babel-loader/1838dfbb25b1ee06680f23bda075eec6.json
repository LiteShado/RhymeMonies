{"ast":null,"code":"var _jsxFileName = \"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/MySongs.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios'; // import Music from '../components/Music'\n// import '../css/Music.css'\n\nimport env from 'react-dotenv';\nimport SongChoice from '../pages/SongChoice';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MySongs = () => {\n  _s();\n\n  // const[allSongs, setAllSongs] = useState(null)\n  // const userId = localStorage.getItem('userId', userId)\n  const [allSongs, setAllUserSongs] = useState(null); // const id = localStorage.getItem('userId', userId)\n\n  const getAllSongs = async () => {\n    try {\n      const res = await axios.get(`${env.API_URL}/users/songs`);\n      console.log(res);\n      setAllUserSongs(res.data);\n      console.log(res.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAllSongs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Here Are Your Songs!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), allUserSongs && allUserSongs.map((res, i) => {\n      console.log(res);\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/songs/${res.id}`,\n          className: \"userSongs\",\n          children: [/*#__PURE__*/_jsxDEV(SongChoice, {\n            song: res.title // userId={allUserSongs.userId}\n            // preview=\"true\"\n            // placeholder={allUserSongs.title}\n\n          }, res.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), allUserSongs.title, \" | \", allUserSongs.genre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, res.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(MySongs, \"vgZtOaOYLkRB5dfjeXRR/FYiXiA=\");\n\n_c = MySongs;\nexport default MySongs;\n\nvar _c;\n\n$RefreshReg$(_c, \"MySongs\");","map":{"version":3,"sources":["/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/MySongs.js"],"names":["useEffect","useState","axios","env","SongChoice","Link","MySongs","allSongs","setAllUserSongs","getAllSongs","res","get","API_URL","console","log","data","error","allUserSongs","map","i","id","title","genre"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElB;AACA;AAEA,QAAK,CAACC,QAAD,EAAWC,eAAX,IAA8BP,QAAQ,CAAC,IAAD,CAA3C,CALkB,CAOlB;;AAEA,QAAMQ,WAAW,GAAG,YAAW;AAC3B,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,GAAER,GAAG,CAACS,OAAQ,cAAzB,CAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACAF,MAAAA,eAAe,CAACE,GAAG,CAACK,IAAL,CAAf;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAhB;AAEC,KANL,CAMM,OAAOC,KAAP,EAAc;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACC;AACR,GAVD;;AAYAhB,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,WAAW;AACd,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAGCQ,YAAY,IAAIA,YAAY,CAACC,GAAb,CAAiB,CAACR,GAAD,EAAMS,CAAN,KAAY;AAC1CN,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACJ,0BACI;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,UAASA,GAAG,CAACU,EAAG,EAA3B;AACA,UAAA,SAAS,EAAC,WADV;AAAA,kCAEA,QAAC,UAAD;AAEA,YAAA,IAAI,EAAEV,GAAG,CAACW,KAFV,CAGA;AACA;AACA;;AALA,aACKX,GAAG,CAACU,EADT;AAAA;AAAA;AAAA;AAAA,kBAFA,EASCH,YAAY,CAACI,KATd,SASwBJ,YAAY,CAACK,KATrC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAASZ,GAAG,CAACU,EAAb;AAAA;AAAA;AAAA;AAAA,cADJ;AAeM,KAjBW,CAHjB;AAAA,kBADJ;AA2BH,CApDD;;GAAMd,O;;KAAAA,O;AAwDN,eAAeA,OAAf","sourcesContent":["import {useEffect, useState} from 'react'\nimport axios from 'axios'\n// import Music from '../components/Music'\n// import '../css/Music.css'\nimport env from 'react-dotenv'\nimport SongChoice from '../pages/SongChoice'\nimport { Link } from 'react-router-dom'\n\n\nconst MySongs = () => {\n\n    // const[allSongs, setAllSongs] = useState(null)\n    // const userId = localStorage.getItem('userId', userId)\n\n    const[allSongs, setAllUserSongs] = useState(null)\n\n    // const id = localStorage.getItem('userId', userId)\n\n    const getAllSongs = async() => {\n        try {\n            const res = await axios.get(`${env.API_URL}/users/songs`)\n            console.log(res)\n            setAllUserSongs(res.data)\n            console.log(res.data)\n\n            } catch (error) {\n            console.log(error)\n            }\n    }\n\n    useEffect(() => {\n        getAllSongs()\n    },[])\n\n    return (\n        <>\n        <h1>Here Are Your Songs!!</h1>\n\n        {allUserSongs && allUserSongs.map((res, i) => {\n            console.log(res)\n        return (\n            <li key={res.id}>\n                <Link to={`/songs/${res.id}`}\n                className=\"userSongs\">\n                <SongChoice\n                key={res.id}\n                song={res.title}\n                // userId={allUserSongs.userId}\n                // preview=\"true\"\n                // placeholder={allUserSongs.title}\n                />\n                {allUserSongs.title} | {allUserSongs.genre}</Link>\n\n            </li>\n\n            )})\n        }\n        </>\n    )\n\n\n}\n\n\n\nexport default MySongs\n"]},"metadata":{},"sourceType":"module"}