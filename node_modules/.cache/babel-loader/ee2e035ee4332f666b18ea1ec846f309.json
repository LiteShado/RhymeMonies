{"ast":null,"code":"var _jsxFileName = \"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/Lyric.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from 'react';\nimport { UserContext } from '../context/UserContext';\nimport axios from 'axios'; // import Music from '../components/Music'\n// import '../css/Music.css'\n\nimport env from 'react-dotenv';\nimport { useParams, Redirect, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Lyric = props => {\n  _s();\n\n  const {\n    userState\n  } = useContext(UserContext);\n  const [song, setSong] = userState;\n  const [lyric, setLyric] = useState('');\n  const [userId, setUserId] = useState('');\n  const [songId, setSongId] = useState('');\n  console.log(props.match.params.id);\n  console.log(props);\n  const [lyrics, setLyrics] = useState;\n\n  const get = async () => {\n    try {\n      const lyric = await axios.get(`${env.API_URL}/lyrics/${props.match.params.id}`);\n      let i;\n      const array = lyric.data.lyrics;\n\n      for (i = 0; i < array.length; i++) {\n        console.log(array[i].lyric);\n        setLyrics(array[i].lyric);\n      }\n\n      console.log(array);\n      console.log;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    get();\n  }, []);\n\n  const signupSubmit = async e => {\n    e.preventDefault(); // let user = localStorage.getItem('userId')\n\n    let id = localStorage.getItem('userId');\n    let idd = props.match.params.id;\n    console.log(id);\n    console.log(idd);\n    console.log(get);\n    let res = await axios.post(`${env.API_URL}/lyrics/${props.match.params.id}`, {\n      lyric: lyric,\n      userId: id,\n      songId: idd\n    });\n    console.log(res); // localStorage.setItem('lyric', res.data.song.lyric)\n\n    setSong(res.data.song);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Check Out These Lyrics!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"newLyricContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add Your Lyrics To The Song!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: signupSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"lyric\",\n          type: \"text\",\n          placeholder: \"Lyrics\",\n          value: lyric,\n          onChange: e => setLyric(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"userId\",\n          type: \"hidden\",\n          placeholder: \"UserId\",\n          value: userId,\n          onChange: e => setUserId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"songId\",\n          type: \"hidden\",\n          placeholder: \"SongId\",\n          value: songId,\n          onChange: e => setUserId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this); //         axios.get(`${env.API_URL}/songs/${params.id}/lyrics`).then((response) => {\n  //            console.log(response)\n  //            setAllLyric(response.data)\n  //        })\n  // }\n  //     useEffect(getAllLyric, [])\n  //     const [lyric, setLyric] = useState({\n  //         lyric: ''\n  //     })\n  //     const handleChange = (e) => {\n  //         const { name, value } = e.target\n  //         setLyric({\n  //             ...lyric,\n  //             [name]: value\n  //         })\n  //     }\n  //     const handleSubmit = (e) => {\n  //         e.preventDefault()\n  //         axios.post(`${env.API_URL}/songs/${params.id}/lyrics`, lyric).then((response) => {\n  //             console.log(response);\n  //         })\n  //         setShouldRedirect(response.data.id)\n  //         }\n  // const [lyric, setLyric] = useState({})\n  // return (\n  // <div>\n  // <h1>Here Are the Lyrics</h1>\n  // <ul>\n  //     <div>\n  //         {allLyric.map((lyric) => {\n  //             return (\n  //             <div>\n  //                 <li key={lyric.id}>\n  //                     <Link to={`/songs/${params.id}/lyrics`}>{lyric.lyric}</Link>\n  //                 </li>\n  //                     <Link to={`/songs/${params.id}/lyrics`}>View Lyrics</Link>\n  //             </div>\n  //             )\n  //             })}\n  //             </div>\n  // <h1>Add Your Lyrics:</h1>\n  //     <form onSubmit={handleSubmit}>\n  //         <div>\n  //             <label htmlFor=\"new-lyric\">Lyrics:</label>\n  //             <input type=\"text\" placeholder=\"lyrics\" name=\"lyric\" value={lyric.lyric} onChange={handleChange}\n  //             />\n  //         </div>\n  //     <input type=\"submit\" value=\"submit\" />\n  //     </form>\n  // </ul>\n  // </div>\n  //         )\n};\n\n_s(Lyric, \"nPpdQm1oMUDTz1SleFT4JMe/BkQ=\");\n\n_c = Lyric;\nexport default Lyric;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lyric\");","map":{"version":3,"sources":["/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/Lyric.js"],"names":["useEffect","useState","useContext","UserContext","axios","env","useParams","Redirect","Link","Lyric","props","userState","song","setSong","lyric","setLyric","userId","setUserId","songId","setSongId","console","log","match","params","id","lyrics","setLyrics","get","API_URL","i","array","data","length","error","signupSubmit","e","preventDefault","localStorage","getItem","idd","res","post","target","value"],"mappings":"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","sourcesContent":["import {useEffect, useState, useContext} from 'react'\nimport {UserContext} from '../context/UserContext'\nimport axios from 'axios'\n// import Music from '../components/Music'\n// import '../css/Music.css'\nimport env from 'react-dotenv'\nimport { useParams, Redirect, Link } from 'react-router-dom'\n\nconst Lyric = (props) => {\n\n    const {userState} = useContext(UserContext)\n    const [song,setSong] = userState\n\n\n    const [lyric,setLyric] = useState('')\n    const [userId,setUserId] = useState('')\n    const [songId,setSongId] = useState('')\n    console.log(props.match.params.id)\n    console.log(props)\n\n    const [lyrics, setLyrics] = useState\n\n    const get = async() => {\n        try {\n\n        const lyric = await axios.get(`${env.API_URL}/lyrics/${props.match.params.id}`)\n\n        let i\n\n        const array = lyric.data.lyrics\n        for (i =0; i<array.length; i++) {\n            console.log(array[i].lyric)\n            setLyrics(array[i].lyric)\n        }\n\n        console.log(array)\n        console.log\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    useEffect(() => {\n        get()\n    }, [])\n\n\n    const signupSubmit = async (e) => {\n        e.preventDefault()\n        // let user = localStorage.getItem('userId')\n        let id = localStorage.getItem('userId')\n        let idd = props.match.params.id\n        console.log(id)\n        console.log(idd)\n\n\n        console.log(get)\n\n        let res = await axios.post(`${env.API_URL}/lyrics/${props.match.params.id}`, {\n            lyric: lyric,\n            userId: id,\n            songId: idd\n        })\n        console.log(res)\n        // localStorage.setItem('lyric', res.data.song.lyric)\n\n        setSong(res.data.song)\n    }\n\n    return (\n        <div>\n            <div>\n                <h1>Check Out These Lyrics!!</h1>\n\n            </div>\n            <div className=\"newLyricContainer\">\n                <h1>Add Your Lyrics To The Song!</h1>\n                <form onSubmit={signupSubmit}>\n                    <textarea name=\"lyric\" type=\"text\" placeholder=\"Lyrics\" value={lyric} onChange={(e) => setLyric(e.target.value)} />\n\n                    <input name=\"userId\" type=\"hidden\" placeholder=\"UserId\" value={userId} onChange={(e) => setUserId(e.target.value)} />\n\n                    <input name=\"songId\" type=\"hidden\" placeholder=\"SongId\" value={songId} onChange={(e) => setUserId(e.target.value)} />\n\n                    <input type=\"submit\" value=\"submit\" />\n                </form>\n            </div>\n        </div>\n    )\n\n\n//         axios.get(`${env.API_URL}/songs/${params.id}/lyrics`).then((response) => {\n//            console.log(response)\n//            setAllLyric(response.data)\n//        })\n// }\n//     useEffect(getAllLyric, [])\n\n//     const [lyric, setLyric] = useState({\n//         lyric: ''\n//     })\n\n//     const handleChange = (e) => {\n//         const { name, value } = e.target\n//         setLyric({\n//             ...lyric,\n//             [name]: value\n//         })\n//     }\n\n//     const handleSubmit = (e) => {\n//         e.preventDefault()\n//         axios.post(`${env.API_URL}/songs/${params.id}/lyrics`, lyric).then((response) => {\n//             console.log(response);\n//         })\n//         setShouldRedirect(response.data.id)\n//         }\n\n// const [lyric, setLyric] = useState({})\n\n\n\n        // return (\n            // <div>\n            // <h1>Here Are the Lyrics</h1>\n            // <ul>\n            //     <div>\n            //         {allLyric.map((lyric) => {\n            //             return (\n            //             <div>\n            //                 <li key={lyric.id}>\n            //                     <Link to={`/songs/${params.id}/lyrics`}>{lyric.lyric}</Link>\n            //                 </li>\n            //                     <Link to={`/songs/${params.id}/lyrics`}>View Lyrics</Link>\n\n            //             </div>\n            //             )\n            //             })}\n            //             </div>\n                // <h1>Add Your Lyrics:</h1>\n                //     <form onSubmit={handleSubmit}>\n                //         <div>\n                //             <label htmlFor=\"new-lyric\">Lyrics:</label>\n                //             <input type=\"text\" placeholder=\"lyrics\" name=\"lyric\" value={lyric.lyric} onChange={handleChange}\n                //             />\n                //         </div>\n\n                //     <input type=\"submit\" value=\"submit\" />\n\n                //     </form>\n       // </ul>\n            // </div>\n//         )\n\n}\nexport default Lyric\n"]},"metadata":{},"sourceType":"module"}