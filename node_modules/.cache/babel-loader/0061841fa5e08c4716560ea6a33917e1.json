{"ast":null,"code":"var _jsxFileName = \"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/New.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport env from \"react-dotenv\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst New = () => {\n  _s();\n\n  const history = useHistory();\n  const [shouldRedirect, setShouldRedirect] = useState(null); // const [title, setTitle] = useState('')\n  // const [genre, setGenre] = useState('')\n  // const addSong = async (e) => {\n  //     e.preventDefault()\n  //     try {\n  //         let auth = localStorage.getItem('userId')\n  //         let res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/songs`,\n  //         {\n  //             title: title,\n  //             genre: genre\n  //         },\n  //         {\n  //             headers: {\n  //                 authorization:auth\n  //             }\n  //         })\n  //         console.log(res)\n  //     } catch (error) {\n  //        console.log(error)\n  //     }\n  // }\n\n  const [song, setSong] = useState({\n    title: '',\n    genre: '',\n    userId: ''\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSong({ ...song,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post(`${env.API_URL}`, song).then(response => {\n      console.log(response);\n      useHistory.push({\n        pathname: `/songs/new/${response.data.id}`\n      });\n      setShouldRedirect(response.data.id);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [shouldRedirect ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: `${process.env.REACT_APP_BACKEND_URL}/${shouldRedirect}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 32\n    }, this) : null, /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Submit a New Song to the Community!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"new-title\",\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"title\",\n            name: \"title\",\n            value: song.title,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"new-genre\",\n            children: \"Genre:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"genre\",\n            name: \"genre\",\n            value: song.genre,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(New, \"Ku6X3GcM/FWluTJjOSAbIkqE2ts=\", false, function () {\n  return [useHistory];\n});\n\n_c = New;\nexport default New;\n\nvar _c;\n\n$RefreshReg$(_c, \"New\");","map":{"version":3,"sources":["/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/New.js"],"names":["useState","axios","useHistory","env","New","history","shouldRedirect","setShouldRedirect","song","setSong","title","genre","userId","handleChange","e","name","value","target","handleSubmit","preventDefault","post","API_URL","then","response","console","log","push","pathname","data","id","process","REACT_APP_BACKEND_URL"],"mappings":"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","sourcesContent":["import {useState} from 'react'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\nimport env from \"react-dotenv\"\n\nconst New = () => {\n    const history = useHistory();\n    const [shouldRedirect, setShouldRedirect] =\n    useState(null)\n    // const [title, setTitle] = useState('')\n    // const [genre, setGenre] = useState('')\n\n    // const addSong = async (e) => {\n    //     e.preventDefault()\n    //     try {\n    //         let auth = localStorage.getItem('userId')\n    //         let res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/songs`,\n\n    //         {\n    //             title: title,\n    //             genre: genre\n    //         },\n    //         {\n    //             headers: {\n    //                 authorization:auth\n    //             }\n    //         })\n\n    //         console.log(res)\n    //     } catch (error) {\n    //        console.log(error)\n    //     }\n    // }\n\n    const [song, setSong] = useState({\n        title: '',\n        genre: '',\n        userId: ''\n    })\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n        setSong({\n            ...song,\n            [name]: value\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        axios.post(`${env.API_URL}`, song).then((response) => {\n\n            console.log(response);\n            useHistory.push({ pathname: `/songs/new/${response.data.id}`\n        })\n        setShouldRedirect(response.data.id)\n        })\n    }\n\n    return (\n        <div>\n            { shouldRedirect ? <Redirect to={`${process.env.REACT_APP_BACKEND_URL}/${shouldRedirect}`} /> : null }\n        <>\n        <h1>Submit a New Song to the Community!</h1>\n        <form onSubmit={handleSubmit}>\n            <div>\n                <label htmlFor=\"new-title\">Title:</label>\n                <input type=\"text\" placeholder=\"title\" name=\"title\" value={song.title} onChange={handleChange}\n                />\n            </div>\n\n            <div>\n                <label htmlFor=\"new-genre\">Genre:</label>\n                <input type=\"text\" placeholder=\"genre\" name=\"genre\" value={song.genre} onChange={handleChange}\n                />\n            </div>\n            <div>\n                <input type=\"submit\" value=\"submit\" />\n            </div>\n\n        </form>\n        </>\n        </div>\n    )\n}\n\nexport default New\n"]},"metadata":{},"sourceType":"module"}