{"ast":null,"code":"var _jsxFileName = \"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/New.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from 'react';\nimport { UserContext } from '../context/UserContext';\nimport axios from 'axios';\nimport '../css/Login.css';\nimport env from 'react-dotenv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst New = props => {\n  _s();\n\n  const {\n    userState\n  } = useContext(UserContext);\n  const [song, setSong] = userState;\n  const [title, setTitle] = useState('');\n  const [genre, setGenre] = useState('');\n  const [userId, setUserId] = useState('');\n\n  const newSong = async e => {\n    e.preventDefault(); // let user = localStorage.getItem('userId')\n\n    let userId = localStorage.getItem('userId');\n    console.log(userId);\n    let res = await axios.post(`${env.API_URL}/songs/new`, {\n      title: title,\n      genre: genre,\n      id: userId\n    });\n    console.log(res);\n    localStorage.setItem('title', res.data.song.title);\n    localStorage.setItem('genre', res.data.song.genre);\n    setSong(res.data.song); // localStorage.setItem('userId', res.data.user.id)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"newSongContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Your Song to the Community!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: newSong,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"genre\",\n        children: \"Choose your Genre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"genre\",\n        value: genre,\n        onChange: e => setGenre(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Hip Hop\",\n          children: \"Hip Hop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Rap\",\n          children: \"Rap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Pop\",\n          children: \"Pop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"RnB\",\n          children: \"RnB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"userId\",\n        type: \"hidden\",\n        value: userId,\n        onChange: e => setUserId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 13\n  }, this);\n};\n\n_s(New, \"8mkYwYO7L/nlifBf0wOM/FUPJOo=\");\n\n_c = New;\nexport default New;\n\nvar _c;\n\n$RefreshReg$(_c, \"New\");","map":{"version":3,"sources":["/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/New.js"],"names":["useState","useContext","UserContext","axios","env","New","props","userState","song","setSong","title","setTitle","genre","setGenre","userId","setUserId","newSong","e","preventDefault","localStorage","getItem","console","log","res","post","API_URL","id","setItem","data","target","value"],"mappings":"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","sourcesContent":["import {useState, useContext} from 'react'\nimport {UserContext} from '../context/UserContext'\nimport axios from 'axios'\nimport '../css/Login.css'\nimport env from 'react-dotenv'\n\nconst New = (props) => {\n    const {userState} = useContext(UserContext)\n    const [song,setSong] = userState\n\n    const [title,setTitle] = useState('')\n    const [genre,setGenre] = useState('')\n    const [userId, setUserId] = useState('')\n\n    const newSong = async (e) => {\n        e.preventDefault()\n        // let user = localStorage.getItem('userId')\n        let userId = localStorage.getItem('userId')\n        console.log(userId)\n\n        let res = await axios.post(`${env.API_URL}/songs/new`, {\n            title: title,\n            genre: genre,\n            id: userId\n        })\n        console.log(res)\n        localStorage.setItem('title', res.data.song.title)\n        localStorage.setItem('genre', res.data.song.genre)\n\n        setSong(res.data.song)\n        // localStorage.setItem('userId', res.data.user.id)\n    }\n\n    return (\n            <div className=\"newSongContainer\">\n                <h1>Add Your Song to the Community!</h1>\n                <form onSubmit={newSong}>\n                    <input name=\"title\" type=\"text\" placeholder=\"Title\" value={title} onChange={(e) => setTitle(e.target.value)} />\n\n                    {/* <input name=\"title\" type=\"text\" placeholder=\"Title\" value={genre} onChange={(e) => setGenre(e.target.value)} /> */}\n\n                    <label for=\"genre\">Choose your Genre:</label>\n\n                    <select name=\"genre\" value={genre} onChange={(e) => setGenre(e.target.value)}>\n                        <option value=\"Hip Hop\">Hip Hop</option>\n                        <option value=\"Rap\">Rap</option>\n                        <option value=\"Pop\">Pop</option>\n                        <option value=\"RnB\">RnB</option>\n                    </select>\n                    <input name=\"userId\" type=\"hidden\" value={userId} onChange={(e) => setUserId(e.target.value)} />\n\n                    <input type=\"submit\" value=\"submit\" />\n                </form>\n            </div>\n    )\n}\n\nexport default New\n"]},"metadata":{},"sourceType":"module"}