{"ast":null,"code":"var _jsxFileName = \"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/Songs.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios'; // import Music from '../components/Music'\n// import '../css/Music.css'\n\nimport env from 'react-dotenv';\nimport SongChoice from '../pages/SongChoice';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Songs = () => {\n  _s();\n\n  const [allSongs, setAllSongs] = useState(null);\n\n  const getAllSongs = async () => {\n    try {\n      const res = await axios.get(`${env.API_URL}/songs`);\n      setAllSongs(res.data);\n      console.log(res.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAllSongs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Check Out These from the Community!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), allSongs && allSongs.map((res, i) => /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/songs\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(SongChoice, {\n          song: res,\n          preview: \"true\",\n          placeholder: res.title\n        }, res.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), res.title, \" | \", res.genre]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n};\n\n_s(Songs, \"L7S7ervb3aZJLslVc7LsjZwl+YM=\");\n\n_c = Songs;\nexport default Songs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Songs\");","map":{"version":3,"sources":["/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/Songs.js"],"names":["useEffect","useState","axios","env","SongChoice","Link","Songs","allSongs","setAllSongs","getAllSongs","res","get","API_URL","data","console","log","error","map","i","title","id","genre"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEhB,QAAK,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAvC;;AAEA,QAAMQ,WAAW,GAAG,YAAW;AACvB,QAAI;AACJ,YAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,GAAER,GAAG,CAACS,OAAQ,QAAzB,CAAlB;AACAJ,MAAAA,WAAW,CAACE,GAAG,CAACG,IAAL,CAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACG,IAAhB;AACC,KAJD,CAIE,OAAOG,KAAP,EAAc;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH;AACR,GARD;;AAUAhB,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,WAAW;AACd,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAECF,QAAQ,IAAIA,QAAQ,CAACU,GAAT,CAAa,CAACP,GAAD,EAAMQ,CAAN,kBAC1B,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE,QAAV;AAAA,6BACI;AAAA,gCACI,QAAC,UAAD;AAEA,UAAA,IAAI,EAAER,GAFN;AAGA,UAAA,OAAO,EAAC,MAHR;AAIA,UAAA,WAAW,EAAEA,GAAG,CAACS;AAJjB,WACKT,GAAG,CAACU,EADT;AAAA;AAAA;AAAA;AAAA,gBADJ,EAMOV,GAAG,CAACS,KANX,SAMqBT,GAAG,CAACW,KANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADa,CAFb;AAAA,kBADJ;AAiBH,CAnCD;;GAAMf,K;;KAAAA,K;AAoCN,eAAeA,KAAf","sourcesContent":["import {useEffect, useState} from 'react'\nimport axios from 'axios'\n// import Music from '../components/Music'\n// import '../css/Music.css'\nimport env from 'react-dotenv'\nimport SongChoice from '../pages/SongChoice'\nimport { Link } from 'react-router-dom'\n\n\nconst Songs = () => {\n\n    const[allSongs, setAllSongs] = useState(null)\n\n    const getAllSongs = async() => {\n            try {\n            const res = await axios.get(`${env.API_URL}/songs`)\n            setAllSongs(res.data)\n            console.log(res.data)\n            } catch (error) {\n                console.log(error)\n            }\n    }\n\n    useEffect(() => {\n        getAllSongs()\n    },[])\n\n    return (\n        <>\n        <h1>Check Out These from the Community!</h1>\n        {allSongs && allSongs.map((res, i) =>\n        <Link to= \"/songs\">\n            <li>\n                <SongChoice\n                key={res.id}\n                song={res}\n                preview=\"true\"\n                placeholder={res.title}\n                />{res.title} | {res.genre}\n                </li>\n        </Link>\n            )}\n        </>\n    )\n}\nexport default Songs\n"]},"metadata":{},"sourceType":"module"}