{"ast":null,"code":"var _jsxFileName = \"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/Songs.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios'; // import Music from '../components/Music'\n// import '../css/Music.css'\n\nimport env from 'react-dotenv';\nimport SongChoice from '../pages/SongChoice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Songs = () => {\n  _s();\n\n  const [allSongs, setAllSongs] = useState(null);\n\n  const getAllSongs = async () => {\n    try {\n      const res = await axios.get(`${env.API_URL}/songs`);\n      setAllSongs(res.data.songs);\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAllSongs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Check Out These from the Community!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), allSongs && allSongs.map((song, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(SongChoice, {\n        song: song,\n        preview: \"true\"\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), \"// \", /*#__PURE__*/_jsxDEV(Link, {\n        to: `/songs/${params.id}/lyrics`,\n        children: \"View Lyrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 20\n      }, this), \"/* \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          axios.get(`${env.API_URL}/songs/${params.id}`);\n        },\n        children: \"View Song\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          axios.get(`${env.API_URL}/songs/${params.id}/lyrics`);\n        },\n        children: \"Add Lyrics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), \" */ />\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true);\n};\n\n_s(Songs, \"L7S7ervb3aZJLslVc7LsjZwl+YM=\");\n\n_c = Songs;\nexport default Songs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Songs\");","map":{"version":3,"sources":["/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/Songs.js"],"names":["useEffect","useState","axios","env","SongChoice","Songs","allSongs","setAllSongs","getAllSongs","res","get","API_URL","data","songs","console","log","error","map","song","i","id","params"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEhB,QAAK,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,IAAD,CAAvC;;AAEA,QAAMO,WAAW,GAAG,YAAW;AACvB,QAAI;AACJ,YAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAW,GAAEP,GAAG,CAACQ,OAAQ,QAAzB,CAAlB;AACAJ,MAAAA,WAAW,CAACE,GAAG,CAACG,IAAJ,CAASC,KAAV,CAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACC,KAJD,CAIE,OAAOO,KAAP,EAAc;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACH;AACR,GARD;;AAUAhB,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,WAAW;AACd,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAECF,QAAQ,IAAIA,QAAQ,CAACW,GAAT,CAAa,CAACC,IAAD,EAAOC,CAAP,kBACtB;AAAA,8BAAI,QAAC,UAAD;AAEA,QAAA,IAAI,EAAED,IAFN;AAGA,QAAA,OAAO,EAAC;AAHR,SACKA,IAAI,CAACE,EADV;AAAA;AAAA;AAAA;AAAA,cAAJ,sBAMO,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,UAASC,MAAM,CAACD,EAAG,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANP,sBAQO;AAAQ,QAAA,OAAO,EAAE,MAAM;AACtBlB,UAAAA,KAAK,CAACQ,GAAN,CAAW,GAAEP,GAAG,CAACQ,OAAQ,UAASU,MAAM,CAACD,EAAG,EAA5C;AACH,SAFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARP,eAWI;AAAQ,QAAA,OAAO,EAAE,MAAM;AACnBlB,UAAAA,KAAK,CAACQ,GAAN,CAAW,GAAEP,GAAG,CAACQ,OAAQ,UAASU,MAAM,CAACD,EAAG,SAA5C;AACH,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADS,CAFb;AAAA,kBADJ;AAsBH,CAxCD;;GAAMf,K;;KAAAA,K;AAyCN,eAAeA,KAAf","sourcesContent":["import {useEffect, useState} from 'react'\nimport axios from 'axios'\n// import Music from '../components/Music'\n// import '../css/Music.css'\nimport env from 'react-dotenv'\nimport SongChoice from '../pages/SongChoice'\n\n\nconst Songs = () => {\n\n    const[allSongs, setAllSongs] = useState(null)\n\n    const getAllSongs = async() => {\n            try {\n            const res = await axios.get(`${env.API_URL}/songs`)\n            setAllSongs(res.data.songs)\n            console.log(res)\n            } catch (error) {\n                console.log(error)\n            }\n    }\n\n    useEffect(() => {\n        getAllSongs()\n    },[])\n\n    return (\n        <>\n        <h1>Check Out These from the Community!</h1>\n        {allSongs && allSongs.map((song, i) =>\n            <li><SongChoice\n                key={song.id}\n                song={song}\n                preview=\"true\"></SongChoice>\n\n\n                // <Link to={`/songs/${params.id}/lyrics`}>View Lyrics</Link>\n\n                /* <button onClick={() => {\n                    axios.get(`${env.API_URL}/songs/${params.id}`)\n                }}>View Song</button>\n                <button onClick={() => {\n                    axios.get(`${env.API_URL}/songs/${params.id}/lyrics`)\n                }}>Add Lyrics</button> */\n                /></li>\n            )}\n        </>\n    )\n}\nexport default Songs\n"]},"metadata":{},"sourceType":"module"}