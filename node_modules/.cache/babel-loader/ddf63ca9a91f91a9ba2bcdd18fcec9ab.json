{"ast":null,"code":"var _jsxFileName = \"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/MySongs.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from 'react';\nimport axios from 'axios'; // import Music from '../components/Music'\n// import '../css/Music.css'\n\nimport env from 'react-dotenv'; // import SongChoice from '../pages/SongChoice'\n\nimport { Link } from 'react-router-dom';\nimport { UserContext } from '../context/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MySongs = () => {\n  _s();\n\n  console.log(props);\n  const {\n    userState\n  } = useContext(UserContext);\n  const [allSongs, setAllSongs] = useState(null);\n\n  const getAllSongs = async () => {\n    try {\n      const res = await axios.get(`${env.API_URL}/songs/user`);\n      console.log(res);\n      let i;\n      const array = res.data;\n      setAllSongs(array);\n      console.log(array);\n\n      for (i = 0; i < array.length; i++) {\n        console.log(array[i].res); // setLyric(array[i].lyric)\n\n        console.log(res);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAllSongs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mySongs\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Here Are Your Songs!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), allSongs && allSongs.map((res, i) => {\n      console.log(res);\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/songs/${res.id}`,\n          className: \"userSongs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)\n      }, res.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MySongs, \"cxooSLOR2iTUM9emd+rkFPcRtqM=\");\n\n_c = MySongs;\nexport default MySongs;\n\nvar _c;\n\n$RefreshReg$(_c, \"MySongs\");","map":{"version":3,"sources":["/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/MySongs.js"],"names":["useEffect","useState","useContext","axios","env","Link","UserContext","MySongs","console","log","props","userState","allSongs","setAllSongs","getAllSongs","res","get","API_URL","i","array","data","length","error","map","id"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,EAA6BC,UAA7B,QAA8C,OAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,OAAOC,GAAP,MAAgB,cAAhB,C,CACA;;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAAQC,WAAR,QAA0B,wBAA1B;;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElBC,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AAEA,QAAM;AAACC,IAAAA;AAAD,MAAcT,UAAU,CAACI,WAAD,CAA9B;AACA,QAAK,CAACM,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,IAAD,CAAvC;;AAGA,QAAMa,WAAW,GAAG,YAAW;AAC3B,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAW,GAAEZ,GAAG,CAACa,OAAQ,aAAzB,CAAlB;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AAEA,UAAIG,CAAJ;AAEA,YAAMC,KAAK,GAAGJ,GAAG,CAACK,IAAlB;AAEAP,MAAAA,WAAW,CAACM,KAAD,CAAX;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;;AAEA,WAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAACC,KAAK,CAACE,MAApB,EAA4BH,CAAC,EAA7B,EAAiC;AAC7BV,QAAAA,OAAO,CAACC,GAAR,CAAYU,KAAK,CAACD,CAAD,CAAL,CAASH,GAArB,EAD6B,CAE7B;;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACH;AAEA,KAjBL,CAiBM,OAAOO,KAAP,EAAc;AAChBd,MAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACC;AACR,GArBD;;AAuBAtB,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,WAAW;AACd,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAGCF,QAAQ,IAAIA,QAAQ,CAACW,GAAT,CAAa,CAACR,GAAD,EAAMG,CAAN,KAAY;AAClCV,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACJ,0BACI;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,UAASA,GAAG,CAACS,EAAG,EAA3B;AACA,UAAA,SAAS,EAAC;AADV;AAAA;AAAA;AAAA;AAAA;AADJ,SAAST,GAAG,CAACS,EAAb;AAAA;AAAA;AAAA;AAAA,cADJ;AAgBC,KAlBY,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CA9DD;;GAAMjB,O;;KAAAA,O;AAkEN,eAAeA,OAAf","sourcesContent":["import {useEffect, useState, useContext} from 'react'\nimport axios from 'axios'\n// import Music from '../components/Music'\n// import '../css/Music.css'\nimport env from 'react-dotenv'\n// import SongChoice from '../pages/SongChoice'\nimport { Link } from 'react-router-dom'\nimport {UserContext} from '../context/UserContext'\n\n\nconst MySongs = () => {\n\n    console.log(props)\n\n    const {userState} = useContext(UserContext)\n    const[allSongs, setAllSongs] = useState(null)\n\n\n    const getAllSongs = async() => {\n        try {\n            const res = await axios.get(`${env.API_URL}/songs/user`)\n            console.log(res)\n\n            let i\n\n            const array = res.data\n\n            setAllSongs(array)\n            console.log(array)\n\n            for (i = 0; i<array.length; i++) {\n                console.log(array[i].res)\n                // setLyric(array[i].lyric)\n                console.log(res)\n            }\n\n            } catch (error) {\n            console.log(error)\n            }\n    }\n\n    useEffect(() => {\n        getAllSongs()\n    },[])\n\n    return (\n        <div className=\"mySongs\">\n        <h1>Here Are Your Songs!!</h1>\n\n        {allSongs && allSongs.map((res, i) => {\n            console.log(res)\n        return (\n            <li key={res.id}>\n                <Link to={`/songs/${res.id}`}\n                className=\"userSongs\">\n                {/* <SongChoice\n                key={res.id}\n                song={res.title}\n                // userId={allUserSongs.userId}\n                // preview=\"true\"\n                // placeholder={allUserSongs.title}\n                />\n                {allSongs.title} | {allSongs.genre}</Link> */}\n            </Link>\n            </li>\n        )\n\n        })}\n\n        </div>\n    )\n\n}\n\n\n\nexport default MySongs\n"]},"metadata":{},"sourceType":"module"}