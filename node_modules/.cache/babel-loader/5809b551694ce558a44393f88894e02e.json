{"ast":null,"code":"var _jsxFileName = \"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/MySongs.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios'; // import Music from '../components/Music'\n// import '../css/Music.css'\n\nimport env from 'react-dotenv';\nimport SongChoice from '../pages/SongChoice';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MySongs = () => {\n  _s();\n\n  // const[allSongs, setAllSongs] = useState(null)\n  const [allUserSongs, setAllUserSongs] = useState(null);\n  const userId = localStorage.getItem('userId');\n  console.log(props);\n\n  const getAllSongs = async () => {\n    try {\n      const res = await axios.get(`${env.API_URL}/users/songs`);\n      console.log(res); // setAllSongs(res.data)\n\n      setAllUserSongs(res.data);\n      console.log(res.data);\n      console.log(userId);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAllSongs();\n  }, []); // useEffect(() => {\n  //     getAllSongs()\n  // },[])\n  // const filter = () => {\n  //     let filtered = allUserSongs.filter(() => {\n  //         return allUserSongs.includes(userId)\n  //     })\n  // }\n  // useEffect(() => {\n  //     filter(filtered)\n  // }, [filtered]\n  // )\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Here Are Your Songs!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), allUserSongs && allUserSongs.map((res, i) => {\n      console.log(res);\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/songs/${allUserSongs.id}`,\n          className: \"userSongs\",\n          children: [/*#__PURE__*/_jsxDEV(SongChoice, {\n            song: allUserSongs.title,\n            userId: allUserSongs.userId,\n            preview: \"true\",\n            placeholder: allUserSongs.title\n          }, allUserSongs.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), allUserSongs.title, \" | \", allUserSongs.genre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)\n      }, allUserSongs.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(MySongs, \"KpoJaSqN5QOg/h5i1pKc9z8Jrsk=\");\n\n_c = MySongs;\nexport default MySongs;\n\nvar _c;\n\n$RefreshReg$(_c, \"MySongs\");","map":{"version":3,"sources":["/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/MySongs.js"],"names":["useEffect","useState","axios","env","SongChoice","Link","MySongs","allUserSongs","setAllUserSongs","userId","localStorage","getItem","console","log","props","getAllSongs","res","get","API_URL","data","error","map","i","id","title","genre"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElB;AAEA,QAAK,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAD,CAA/C;AACA,QAAMQ,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAf;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;;AACA,QAAMC,WAAW,GAAG,YAAW;AACvB,QAAI;AACJ,YAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAW,GAAEd,GAAG,CAACe,OAAQ,cAAzB,CAAlB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ,EAFI,CAGJ;;AACAR,MAAAA,eAAe,CAACQ,GAAG,CAACG,IAAL,CAAf;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACG,IAAhB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AAEC,KARD,CAQE,OAAOW,KAAP,EAAc;AAChBR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AAEC;AACR,GAbD;;AAeApB,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,WAAW;AACd,GAFQ,EAEP,EAFO,CAAT,CAxBkB,CA4BlB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAICR,YAAY,IAAIA,YAAY,CAACc,GAAb,CAAiB,CAACL,GAAD,EAAMM,CAAN,KAAY;AAC1CV,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AAEJ,0BACI;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,UAAST,YAAY,CAACgB,EAAG,EAApC;AAAuC,UAAA,SAAS,EAAC,WAAjD;AAAA,kCACA,QAAC,UAAD;AAEA,YAAA,IAAI,EAAEhB,YAAY,CAACiB,KAFnB;AAGA,YAAA,MAAM,EAAEjB,YAAY,CAACE,MAHrB;AAIA,YAAA,OAAO,EAAC,MAJR;AAKA,YAAA,WAAW,EAAEF,YAAY,CAACiB;AAL1B,aACKjB,YAAY,CAACgB,EADlB;AAAA;AAAA;AAAA;AAAA,kBADA,EAQChB,YAAY,CAACiB,KARd,SAQwBjB,YAAY,CAACkB,KARrC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAASlB,YAAY,CAACgB,EAAtB;AAAA;AAAA;AAAA;AAAA,cADJ;AAcM,KAjBW,CAJjB;AAAA,kBADJ;AA4BH,CAtED;;GAAMjB,O;;KAAAA,O;AA0EN,eAAeA,OAAf","sourcesContent":["import {useEffect, useState} from 'react'\nimport axios from 'axios'\n// import Music from '../components/Music'\n// import '../css/Music.css'\nimport env from 'react-dotenv'\nimport SongChoice from '../pages/SongChoice'\nimport { Link } from 'react-router-dom'\n\n\nconst MySongs = () => {\n\n    // const[allSongs, setAllSongs] = useState(null)\n\n    const[allUserSongs, setAllUserSongs] = useState(null)\n    const userId = localStorage.getItem('userId')\n\n\n    console.log(props)\n    const getAllSongs = async() => {\n            try {\n            const res = await axios.get(`${env.API_URL}/users/songs`)\n            console.log(res)\n            // setAllSongs(res.data)\n            setAllUserSongs(res.data)\n            console.log(res.data)\n            console.log(userId)\n\n            } catch (error) {\n            console.log(error)\n\n            }\n    }\n\n    useEffect(() => {\n        getAllSongs()\n    },[])\n\n    // useEffect(() => {\n    //     getAllSongs()\n    // },[])\n\n    // const filter = () => {\n    //     let filtered = allUserSongs.filter(() => {\n    //         return allUserSongs.includes(userId)\n    //     })\n    // }\n\n    // useEffect(() => {\n    //     filter(filtered)\n    // }, [filtered]\n    // )\n    return (\n        <>\n        <h1>Here Are Your Songs!!</h1>\n\n\n        {allUserSongs && allUserSongs.map((res, i) => {\n            console.log(res)\n\n        return (\n            <li key={allUserSongs.id}>\n                <Link to={`/songs/${allUserSongs.id}`} className=\"userSongs\">\n                <SongChoice\n                key={allUserSongs.id}\n                song={allUserSongs.title}\n                userId={allUserSongs.userId}\n                preview=\"true\"\n                placeholder={allUserSongs.title}\n                />\n                {allUserSongs.title} | {allUserSongs.genre}</Link>\n\n            </li>\n\n            )})\n        }\n        </>\n    )\n\n\n}\n\n\n\nexport default MySongs\n"]},"metadata":{},"sourceType":"module"}