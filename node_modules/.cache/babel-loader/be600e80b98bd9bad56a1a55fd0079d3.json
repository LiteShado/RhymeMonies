{"ast":null,"code":"var _jsxFileName = \"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/New.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from 'react';\nimport { UserContext } from '../context/UserContext';\nimport axios from 'axios';\nimport '../css/Login.css';\nimport env from 'react-dotenv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst New = () => {\n  _s();\n\n  const {\n    userState\n  } = useContext(UserContext);\n  const [song, setSong] = userState;\n  const [title, setTitle] = useState('');\n  const [genre, setGenre] = useState('');\n  const [userId, setUserId] = useState('');\n\n  const signupSubmit = async e => {\n    e.preventDefault(); // let user = localStorage.getItem('userId')\n\n    let id = localStorage.getItem('userId');\n    console.log(id);\n    let res = await axios.post(`${env.API_URL}/songs/new`, {\n      title: title,\n      genre: genre,\n      id: id\n    });\n    console.log(res);\n    localStorage.setItem('title', res.data.song.title);\n    localStorage.setItem('genre', res.data.song.genre);\n    setSong(res.data.song); // localStorage.setItem('userId', res.data.user.id)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"newSongContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add Your Song to the Community!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: signupSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"title\",\n          type: \"text\",\n          placeholder: \"Title\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"genre\",\n          children: \"Choose your Genre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"genre\",\n          value: genre,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Hip Hop\",\n            onChange: e => setGenre(e.target.value),\n            children: \"Hip Hop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Rap\",\n            onChange: e => setGenre(e.target.value),\n            children: \"Rap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Pop\",\n            onChange: e => setGenre(e.target.value),\n            children: \"Pop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"RnB\",\n            onChange: e => setGenre(e.target.value),\n            children: \"RnB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"userId\",\n          type: \"hidden\",\n          placeholder: \"UserId\",\n          value: userId,\n          onChange: e => setUserId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(New, \"xTO9aDCPD+7GO9L1Vyg0P//Twc0=\");\n\n_c = New;\nexport default New;\n\nvar _c;\n\n$RefreshReg$(_c, \"New\");","map":{"version":3,"sources":["/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/New.js"],"names":["useState","useContext","UserContext","axios","env","New","userState","song","setSong","title","setTitle","genre","setGenre","userId","setUserId","signupSubmit","e","preventDefault","id","localStorage","getItem","console","log","res","post","API_URL","setItem","data","target","value"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,UAAlB,QAAmC,OAAnC;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,GAAP,MAAgB,cAAhB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM;AAACC,IAAAA;AAAD,MAAcL,UAAU,CAACC,WAAD,CAA9B;AACA,QAAM,CAACK,IAAD,EAAMC,OAAN,IAAiBF,SAAvB;AAEA,QAAM,CAACG,KAAD,EAAOC,QAAP,IAAmBV,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACW,KAAD,EAAOC,QAAP,IAAmBZ,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACa,MAAD,EAAQC,SAAR,IAAqBd,QAAQ,CAAC,EAAD,CAAnC;;AAEA,QAAMe,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF,GAD8B,CAE9B;;AACA,QAAIC,EAAE,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ;AAEA,QAAIK,GAAG,GAAG,MAAMpB,KAAK,CAACqB,IAAN,CAAY,GAAEpB,GAAG,CAACqB,OAAQ,YAA1B,EAAuC;AACnDhB,MAAAA,KAAK,EAAEA,KAD4C;AAEnDE,MAAAA,KAAK,EAAEA,KAF4C;AAGnDO,MAAAA,EAAE,EAAEA;AAH+C,KAAvC,CAAhB;AAKAG,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACAJ,IAAAA,YAAY,CAACO,OAAb,CAAqB,OAArB,EAA8BH,GAAG,CAACI,IAAJ,CAASpB,IAAT,CAAcE,KAA5C;AACAU,IAAAA,YAAY,CAACO,OAAb,CAAqB,OAArB,EAA8BH,GAAG,CAACI,IAAJ,CAASpB,IAAT,CAAcI,KAA5C;AAEAH,IAAAA,OAAO,CAACe,GAAG,CAACI,IAAJ,CAASpB,IAAV,CAAP,CAf8B,CAgB9B;AACH,GAjBD;;AAmBA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,QAAQ,EAAEQ,YAAhB;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,IAAI,EAAC,MAAzB;AAAgC,UAAA,WAAW,EAAC,OAA5C;AAAoD,UAAA,KAAK,EAAEN,KAA3D;AAAkE,UAAA,QAAQ,EAAGO,CAAD,IAAON,QAAQ,CAACM,CAAC,CAACY,MAAF,CAASC,KAAV;AAA3F;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAO,UAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAKI;AAAQ,UAAA,IAAI,EAAC,OAAb;AAAqB,UAAA,KAAK,EAAElB,KAA5B;AAAA,kCACI;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAwB,YAAA,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACY,MAAF,CAASC,KAAV,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,KAAK,EAAC,KAAd;AAAmB,YAAA,QAAQ,EAAGb,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACY,MAAF,CAASC,KAAV,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAQ,YAAA,KAAK,EAAC,KAAd;AAAmB,YAAA,QAAQ,EAAGb,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACY,MAAF,CAASC,KAAV,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAQ,YAAA,KAAK,EAAC,KAAd;AAAoB,YAAA,QAAQ,EAAGb,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACY,MAAF,CAASC,KAAV,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAWI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,IAAI,EAAC,QAA1B;AAAmC,UAAA,WAAW,EAAC,QAA/C;AAAwD,UAAA,KAAK,EAAEhB,MAA/D;AAAuE,UAAA,QAAQ,EAAGG,CAAD,IAAOF,SAAS,CAACE,CAAC,CAACY,MAAF,CAASC,KAAV;AAAjG;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAYI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAhDD;;GAAMxB,G;;KAAAA,G;AAkDN,eAAeA,GAAf","sourcesContent":["import {useState, useContext} from 'react'\nimport {UserContext} from '../context/UserContext'\nimport axios from 'axios'\nimport '../css/Login.css'\nimport env from 'react-dotenv'\n\nconst New = () => {\n    const {userState} = useContext(UserContext)\n    const [song,setSong] = userState\n\n    const [title,setTitle] = useState('')\n    const [genre,setGenre] = useState('')\n    const [userId,setUserId] = useState('')\n\n    const signupSubmit = async (e) => {\n        e.preventDefault()\n        // let user = localStorage.getItem('userId')\n        let id = localStorage.getItem('userId')\n        console.log(id)\n\n        let res = await axios.post(`${env.API_URL}/songs/new`, {\n            title: title,\n            genre: genre,\n            id: id\n        })\n        console.log(res)\n        localStorage.setItem('title', res.data.song.title)\n        localStorage.setItem('genre', res.data.song.genre)\n\n        setSong(res.data.song)\n        // localStorage.setItem('userId', res.data.user.id)\n    }\n\n    return (\n        <div>\n            <div className=\"newSongContainer\">\n                <h1>Add Your Song to the Community!</h1>\n                <form onSubmit={signupSubmit}>\n                    <input name=\"title\" type=\"text\" placeholder=\"Title\" value={title} onChange={(e) => setTitle(e.target.value)} />\n\n                    <label for=\"genre\">Choose your Genre:</label>\n\n                    <select name=\"genre\" value={genre}>\n                        <option value=\"Hip Hop\" onChange={(e) => setGenre(e.target.value)}>Hip Hop</option>\n                        <option value=\"Rap\"onChange={(e) => setGenre(e.target.value)}>Rap</option>\n                        <option value=\"Pop\"onChange={(e) => setGenre(e.target.value)}>Pop</option>\n                        <option value=\"RnB\" onChange={(e) => setGenre(e.target.value)}>RnB</option>\n                        </select>\n                    <input name=\"userId\" type=\"hidden\" placeholder=\"UserId\" value={userId} onChange={(e) => setUserId(e.target.value)} />\n                    <input type=\"submit\" value=\"submit\" />\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default New\n"]},"metadata":{},"sourceType":"module"}