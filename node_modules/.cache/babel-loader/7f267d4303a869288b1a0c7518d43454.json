{"ast":null,"code":"var _jsxFileName = \"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/MySongs.js\",\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios'; // import Music from '../components/Music'\n// import '../css/Music.css'\n\nimport env from 'react-dotenv';\nimport SongChoice from '../pages/SongChoice';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MySongs = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  // const[allSongs, setAllSongs] = useState(null)\n  const [allUserSongs, setAllUserSongs] = useState(null);\n\n  const getAllSongs = async () => {\n    _s();\n\n    try {\n      const res = await axios.get(`${env.API_URL}/songs`); // setAllSongs(res.data)\n\n      setAllUserSongs(res.data.userId);\n      console.log(res.data.userId);\n    } catch (error) {\n      console.log(error);\n    }\n\n    useEffect(() => {\n      getAllSongs();\n    }, []);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Check Out These from the Community!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Title | Genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), allUserSongs && allUserSongs.map((res, i) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/songs/${res.id}`,\n            className: \"communitySongs\",\n            children: [/*#__PURE__*/_jsxDEV(SongChoice, {\n              song: res,\n              userId: res.userId,\n              preview: \"true\",\n              placeholder: res.title\n            }, res.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), res.title, \" | \", res.genre]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)\n        }, res.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true);\n  };\n\n  _s(getAllSongs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n};\n\n_s2(MySongs, \"BNgfACSdAFktujNpdHnQsQBuHC0=\");\n\n_c = MySongs;\nexport default MySongs;\n\nvar _c;\n\n$RefreshReg$(_c, \"MySongs\");","map":{"version":3,"sources":["/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/MySongs.js"],"names":["useEffect","useState","axios","env","SongChoice","Link","MySongs","allUserSongs","setAllUserSongs","getAllSongs","res","get","API_URL","data","userId","console","log","error","map","i","id","title","genre"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAAA;;AAElB;AACA,QAAK,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAD,CAA/C;;AAGA,QAAMQ,WAAW,GAAG,YAAW;AAAA;;AACvB,QAAI;AACJ,YAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,GAAER,GAAG,CAACS,OAAQ,QAAzB,CAAlB,CADI,CAGJ;;AACAJ,MAAAA,eAAe,CAACE,GAAG,CAACG,IAAJ,CAASC,MAAV,CAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACG,IAAJ,CAASC,MAArB;AACC,KAND,CAME,OAAOG,KAAP,EAAc;AAChBF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACP;;AAEDjB,IAAAA,SAAS,CAAC,MAAM;AACZS,MAAAA,WAAW;AACd,KAFQ,EAEP,EAFO,CAAT;AAKA,wBACI;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,EAGCF,YAAY,IAAIA,YAAY,CAACW,GAAb,CAAiB,CAACR,GAAD,EAAMS,CAAN,KAAY;AAC9C,4BACI;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,UAAST,GAAG,CAACU,EAAG,EAA3B;AAA8B,YAAA,SAAS,EAAC,gBAAxC;AAAA,oCACA,QAAC,UAAD;AAEA,cAAA,IAAI,EAAEV,GAFN;AAGA,cAAA,MAAM,EAAEA,GAAG,CAACI,MAHZ;AAIA,cAAA,OAAO,EAAC,MAJR;AAKA,cAAA,WAAW,EAAEJ,GAAG,CAACW;AALjB,eACKX,GAAG,CAACU,EADT;AAAA;AAAA;AAAA;AAAA,oBADA,EAQCV,GAAG,CAACW,KARL,SAQeX,GAAG,CAACY,KARnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,WAASZ,GAAG,CAACU,EAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAaM,OAdW,CAHjB;AAAA,oBADJ;AAsBH,GAtCG;;AANkB,KAMZX,WANY;AA6CrB,CA7CD;;IAAMH,O;;KAAAA,O;AA8CN,eAAeA,OAAf","sourcesContent":["import {useEffect, useState} from 'react'\nimport axios from 'axios'\n// import Music from '../components/Music'\n// import '../css/Music.css'\nimport env from 'react-dotenv'\nimport SongChoice from '../pages/SongChoice'\nimport { Link } from 'react-router-dom'\n\n\nconst MySongs = () => {\n\n    // const[allSongs, setAllSongs] = useState(null)\n    const[allUserSongs, setAllUserSongs] = useState(null)\n\n\n    const getAllSongs = async() => {\n            try {\n            const res = await axios.get(`${env.API_URL}/songs`)\n\n            // setAllSongs(res.data)\n            setAllUserSongs(res.data.userId)\n            console.log(res.data.userId)\n            } catch (error) {\n            console.log(error)\n    }\n\n    useEffect(() => {\n        getAllSongs()\n    },[])\n\n\n    return (\n        <>\n        <h1>Check Out These from the Community!</h1>\n        <h3>Title | Genre</h3>\n        {allUserSongs && allUserSongs.map((res, i) => {\n        return (\n            <li key={res.id}>\n                <Link to={`/songs/${res.id}`} className=\"communitySongs\">\n                <SongChoice\n                key={res.id}\n                song={res}\n                userId={res.userId}\n                preview=\"true\"\n                placeholder={res.title}\n                />\n                {res.title} | {res.genre}</Link>\n            </li>\n\n            )})\n        }\n        </>\n    )\n}\n}\nexport default MySongs\n"]},"metadata":{},"sourceType":"module"}