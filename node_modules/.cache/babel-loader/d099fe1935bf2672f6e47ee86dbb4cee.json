{"ast":null,"code":"var _jsxFileName = \"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/Songs.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios'; // import Music from '../components/Music'\n// import '../css/Music.css'\n\nimport env from 'react-dotenv';\nimport SongChoice from '../pages/SongChoice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Songs = () => {\n  _s();\n\n  const [allSongs, setAllSongs] = useState(null);\n\n  const getAllSongs = async () => {\n    try {\n      const res = await axios.get(`${env.API_URL}/songs`);\n      console.log(res);\n      setAllSongs(res.data.songs);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect()(getAllSongs, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Check Out These from the Community!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), allSongs && allSongs.map((song, i) => /*#__PURE__*/_jsxDEV(SongChoice, {\n      song: song,\n      preview: \"true\" // <Link to={`/songs/${params.id}/lyrics`}>View Lyrics</Link>\n\n      /* <button onClick={() => {\n          axios.get(`${env.API_URL}/songs/${params.id}`)\n      }}>View Song</button>\n      <button onClick={() => {\n          axios.get(`${env.API_URL}/songs/${params.id}/lyrics`)\n      }}>Add Lyrics</button> */\n\n    }, song.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true);\n};\n\n_s(Songs, \"L7S7ervb3aZJLslVc7LsjZwl+YM=\");\n\n_c = Songs;\nexport default Songs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Songs\");","map":{"version":3,"sources":["/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/Songs.js"],"names":["useEffect","useState","axios","env","SongChoice","Songs","allSongs","setAllSongs","getAllSongs","res","get","API_URL","console","log","data","songs","error","map","song","i","id"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEhB,QAAK,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,IAAD,CAAvC;;AAGA,QAAMO,WAAW,GAAG,YAAY;AACxB,QAAI;AACH,YAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAW,GAAEP,GAAG,CAACQ,OAAQ,QAAzB,CAAlB;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACAF,MAAAA,WAAW,CAACE,GAAG,CAACK,IAAJ,CAASC,KAAV,CAAX;AACC,KAJD,CAIE,OAAOC,KAAP,EAAc;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH;AACR,GARD;;AAUAhB,EAAAA,SAAS,GAAGQ,WAAH,EAAgB,EAAhB,CAAT;AAEA,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAECF,QAAQ,IAAIA,QAAQ,CAACW,GAAT,CAAa,CAACC,IAAD,EAAOC,CAAP,kBACtB,QAAC,UAAD;AAEI,MAAA,IAAI,EAAED,IAFV;AAGI,MAAA,OAAO,EAAC,MAHZ,CAMI;;AAEA;AAChB;AACA;AACA;AACA;AACA;;AAbY,OACSA,IAAI,CAACE,EADd;AAAA;AAAA;AAAA;AAAA,YADS,CAFb;AAAA,kBADJ;AAsBH,CAvCD;;GAAMf,K;;KAAAA,K;AAwCN,eAAeA,KAAf","sourcesContent":["import {useEffect, useState} from 'react'\nimport axios from 'axios'\n// import Music from '../components/Music'\n// import '../css/Music.css'\nimport env from 'react-dotenv'\nimport SongChoice from '../pages/SongChoice'\n\n\nconst Songs = () => {\n\n    const[allSongs, setAllSongs] = useState(null)\n\n\n    const getAllSongs = async () => {\n            try {\n             const res = await axios.get(`${env.API_URL}/songs`)\n            console.log(res)\n            setAllSongs(res.data.songs)\n            } catch (error) {\n                console.log(error)\n            }\n    }\n\n    useEffect()(getAllSongs, [])\n\n    return (\n        <>\n        <h1>Check Out These from the Community!</h1>\n        {allSongs && allSongs.map((song, i) =>\n            <SongChoice\n                key={song.id}\n                song={song}\n                preview=\"true\"\n\n\n                // <Link to={`/songs/${params.id}/lyrics`}>View Lyrics</Link>\n\n                /* <button onClick={() => {\n                    axios.get(`${env.API_URL}/songs/${params.id}`)\n                }}>View Song</button>\n                <button onClick={() => {\n                    axios.get(`${env.API_URL}/songs/${params.id}/lyrics`)\n                }}>Add Lyrics</button> */\n                />\n            )}\n        </>\n    )\n}\nexport default Songs\n"]},"metadata":{},"sourceType":"module"}