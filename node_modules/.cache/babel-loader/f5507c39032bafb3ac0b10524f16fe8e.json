{"ast":null,"code":"var _jsxFileName = \"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/MySongs.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios'; // import Music from '../components/Music'\n// import '../css/Music.css'\n\nimport env from 'react-dotenv';\nimport SongChoice from '../pages/SongChoice';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MySongs = () => {\n  _s();\n\n  // const[allSongs, setAllSongs] = useState(null)\n  const [allUserSongs, setAllUserSongs] = useState(null);\n  const userId = localStorage.getItem('userId');\n\n  const getAllSongs = async () => {\n    try {\n      const res = await axios.get(`${env.API_URL}/songs`);\n      console.log(res); // setAllSongs(res.data)\n\n      setAllUserSongs(() => res.data);\n      console.log(res.data);\n      console.log(userId);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAllSongs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Here Are Your Songs!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Title | Genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), allUserSongs && allUserSongs.map((res, i) => {\n      console.log(allUserSongs[i].userId);\n      console.log(userId);\n\n      if (allUserSongs[i].userId !== userId) {\n        return null;\n      } // {allUserSongs.filter(allUserSongs[i] => allUserSongs[i].userId===userId) && allUserSongs.map((res, i) => {\n      // console.log(allUserSongs[i].userId)\n      // console.log(allUserSongs)\n      // console.log([i])\n\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/songs/${allUserSongs.id}`,\n          className: \"userSongs\",\n          children: [/*#__PURE__*/_jsxDEV(SongChoice, {\n            song: allUserSongs.title,\n            userId: allUserSongs.userId,\n            preview: \"true\",\n            placeholder: allUserSongs.title\n          }, allUserSongs.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), allUserSongs.title, \" | \", res.genre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, allUserSongs.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(MySongs, \"KpoJaSqN5QOg/h5i1pKc9z8Jrsk=\");\n\n_c = MySongs;\nexport default MySongs;\n\nvar _c;\n\n$RefreshReg$(_c, \"MySongs\");","map":{"version":3,"sources":["/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/MySongs.js"],"names":["useEffect","useState","axios","env","SongChoice","Link","MySongs","allUserSongs","setAllUserSongs","userId","localStorage","getItem","getAllSongs","res","get","API_URL","console","log","data","error","map","i","id","title","genre"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElB;AAEA,QAAK,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAD,CAA/C;AACA,QAAMQ,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAf;;AAGA,QAAMC,WAAW,GAAG,YAAW;AACvB,QAAI;AACJ,YAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,GAAEX,GAAG,CAACY,OAAQ,QAAzB,CAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ,EAFI,CAGJ;;AACAL,MAAAA,eAAe,CAAC,MAChBK,GAAG,CAACK,IADW,CAAf;AAEAF,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAhB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACC,KARD,CAQE,OAAOU,KAAP,EAAc;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AAEC;AAGR,GAfD;;AAiBAnB,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,WAAW;AACd,GAFQ,EAEP,EAFO,CAAT;AAMA,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,EAICL,YAAY,IAAIA,YAAY,CAACa,GAAb,CAAiB,CAACP,GAAD,EAAMQ,CAAN,KAAY;AAC1CL,MAAAA,OAAO,CAACC,GAAR,CAAYV,YAAY,CAACc,CAAD,CAAZ,CAAgBZ,MAA5B;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;;AACA,UAAIF,YAAY,CAACc,CAAD,CAAZ,CAAgBZ,MAAhB,KAA0BA,MAA9B,EAAsC;AAClC,eAAO,IAAP;AACH,OALyC,CAQ9C;AACA;AACA;AACA;;;AACA,0BACI;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,UAASF,YAAY,CAACe,EAAG,EAApC;AAAuC,UAAA,SAAS,EAAC,WAAjD;AAAA,kCACA,QAAC,UAAD;AAEA,YAAA,IAAI,EAAEf,YAAY,CAACgB,KAFnB;AAGA,YAAA,MAAM,EAAEhB,YAAY,CAACE,MAHrB;AAIA,YAAA,OAAO,EAAC,MAJR;AAKA,YAAA,WAAW,EAAEF,YAAY,CAACgB;AAL1B,aACKhB,YAAY,CAACe,EADlB;AAAA;AAAA;AAAA;AAAA,kBADA,EAQCf,YAAY,CAACgB,KARd,SAQwBV,GAAG,CAACW,KAR5B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAASjB,YAAY,CAACe,EAAtB;AAAA;AAAA;AAAA;AAAA,cADJ;AAeC,KA3BgB,CAJjB;AAAA,kBADJ;AAsCH,CArED;;GAAMhB,O;;KAAAA,O;AAuEN,eAAeA,OAAf","sourcesContent":["import {useEffect, useState} from 'react'\nimport axios from 'axios'\n// import Music from '../components/Music'\n// import '../css/Music.css'\nimport env from 'react-dotenv'\nimport SongChoice from '../pages/SongChoice'\nimport { Link } from 'react-router-dom'\n\n\nconst MySongs = () => {\n\n    // const[allSongs, setAllSongs] = useState(null)\n\n    const[allUserSongs, setAllUserSongs] = useState(null)\n    const userId = localStorage.getItem('userId')\n\n\n    const getAllSongs = async() => {\n            try {\n            const res = await axios.get(`${env.API_URL}/songs`)\n            console.log(res)\n            // setAllSongs(res.data)\n            setAllUserSongs(() =>\n            res.data)\n            console.log(res.data)\n            console.log(userId)\n            } catch (error) {\n            console.log(error)\n\n            }\n\n\n    }\n\n    useEffect(() => {\n        getAllSongs()\n    },[])\n\n\n\n    return (\n        <>\n        <h1>Here Are Your Songs!!</h1>\n        <h3>Title | Genre</h3>\n\n        {allUserSongs && allUserSongs.map((res, i) => {\n            console.log(allUserSongs[i].userId)\n            console.log(userId)\n            if (allUserSongs[i].userId !==userId) {\n                return null;\n            }\n\n\n        // {allUserSongs.filter(allUserSongs[i] => allUserSongs[i].userId===userId) && allUserSongs.map((res, i) => {\n        // console.log(allUserSongs[i].userId)\n        // console.log(allUserSongs)\n        // console.log([i])\n        return (\n            <li key={allUserSongs.id}>\n                <Link to={`/songs/${allUserSongs.id}`} className=\"userSongs\">\n                <SongChoice\n                key={allUserSongs.id}\n                song={allUserSongs.title}\n                userId={allUserSongs.userId}\n                preview=\"true\"\n                placeholder={allUserSongs.title}\n                />\n                {allUserSongs.title} | {res.genre}</Link>\n\n            </li>\n\n            )\n        }\n        )\n\n    }\n        </>\n    )\n}\n\nexport default MySongs\n"]},"metadata":{},"sourceType":"module"}