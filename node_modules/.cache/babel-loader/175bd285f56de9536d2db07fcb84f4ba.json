{"ast":null,"code":"var _jsxFileName = \"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/New.js\";\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport env from \"react-dotenv\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst New = () => {\n  // const [shouldRedirect, setShouldRedirect] =\n  // useState(null)\n  // const [song, setSong] = useState({\n  //     title: '',\n  //     genre: '',\n  //     userId: ''\n  // })\n  // const handleChange = (e) => {\n  //     const { name, value } = e.target\n  //     setSong({\n  //         ...song,\n  //         [name]: value\n  //     })\n  // }\n  // const handleSubmit = (e) => {\n  //     e.preventDefault()\n  //     axios.post(`${env.API_URL}/songs/new`, song).then((response) => {\n  //         console.log(response);\n  //     })\n  //     setShouldRedirect(response.data.id)\n  //     }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [shouldRedirect && /*#__PURE__*/_jsxDEV(Redirect, {\n      to: `/songs/${shouldRedirect}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Submit a New Song to the Community!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"new-title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"title\",\n          name: \"title\",\n          value: song.title,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"new-genre\",\n          children: \"Genre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"genre\",\n          name: \"genre\",\n          value: song.genre,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_c = New;\nexport default New;\n\nvar _c;\n\n$RefreshReg$(_c, \"New\");","map":{"version":3,"sources":["/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/New.js"],"names":["useState","axios","Redirect","useHistory","env","New","shouldRedirect","handleSubmit","song","title","handleChange","genre"],"mappings":";AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;AACA,OAAOC,GAAP,MAAgB,cAAhB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AACd;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGJ,sBACQ;AAAA,eACMC,cAAc,iBAChB,QAAC,QAAD;AAAU,MAAA,EAAE,EAAG,UAASA,cAAe;AAAvC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA,eAKA;AAAM,MAAA,QAAQ,EAAEC,YAAhB;AAAA,8BACI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,OAA/B;AAAuC,UAAA,IAAI,EAAC,OAA5C;AAAoD,UAAA,KAAK,EAAEC,IAAI,CAACC,KAAhE;AAAuE,UAAA,QAAQ,EAAEC;AAAjF;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,OAA/B;AAAuC,UAAA,IAAI,EAAC,OAA5C;AAAoD,UAAA,KAAK,EAAEF,IAAI,CAACG,KAAhE;AAAuE,UAAA,QAAQ,EAAED;AAAjF;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAYI;AAAA,+BACI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALA;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AA0BC,CArDD;;KAAML,G;AAwDN,eAAeA,GAAf","sourcesContent":["import {useState} from 'react'\nimport axios from 'axios'\nimport { Redirect, useHistory } from 'react-router-dom'\nimport env from \"react-dotenv\"\n\nconst New = () => {\n    // const [shouldRedirect, setShouldRedirect] =\n    // useState(null)\n\n    // const [song, setSong] = useState({\n    //     title: '',\n    //     genre: '',\n    //     userId: ''\n    // })\n\n    // const handleChange = (e) => {\n    //     const { name, value } = e.target\n    //     setSong({\n    //         ...song,\n    //         [name]: value\n    //     })\n    // }\n\n    // const handleSubmit = (e) => {\n    //     e.preventDefault()\n    //     axios.post(`${env.API_URL}/songs/new`, song).then((response) => {\n    //         console.log(response);\n    //     })\n    //     setShouldRedirect(response.data.id)\n    //     }\n\n\nreturn (\n        <div>\n            { shouldRedirect &&\n            <Redirect to={`/songs/${shouldRedirect}`} /> }\n\n        <h1>Submit a New Song to the Community!</h1>\n        <form onSubmit={handleSubmit}>\n            <div>\n                <label htmlFor=\"new-title\">Title:</label>\n                <input type=\"text\" placeholder=\"title\" name=\"title\" value={song.title} onChange={handleChange}\n                />\n            </div>\n\n            <div>\n                <label htmlFor=\"new-genre\">Genre:</label>\n                <input type=\"text\" placeholder=\"genre\" name=\"genre\" value={song.genre} onChange={handleChange}\n                />\n            </div>\n            <div>\n                <input type=\"submit\" value=\"submit\" />\n            </div>\n\n        </form>\n\n        </div>\n    )\n}\n\n\nexport default New\n"]},"metadata":{},"sourceType":"module"}