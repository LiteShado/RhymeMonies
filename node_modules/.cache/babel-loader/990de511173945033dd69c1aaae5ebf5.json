{"ast":null,"code":"var _jsxFileName = \"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/SongChoice.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport env from 'react-dotenv'; // import {useParams} from 'react-router-dom'\n// import {Link} from 'react-router-dom'\n\nimport { localStorage } from 'use-local-storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongChoice = props => {\n  _s();\n\n  const [song, setSong] = useState({}); // const params = useParams()\n\n  const fetchSong = () => {\n    axios.get(`${env.API_URL}/songs/${props.song.id}`).then(response => {\n      setSong(response.data);\n      console.log(props.song.id); // console.log(props.song.id)\n\n      console.log(response.data.song);\n      console.log(response);\n      setSong(response.data.song);\n      console.log(response.data.song);\n    });\n  }; // localStorage.setItem('title', response.data.song.title);        localStorage.setItem('genre', response.data.song.genre);\n\n\n  useEffect(fetchSong, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Title: \", song.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Genre: \", song.genre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SongChoice, \"VaAakcKOouOH8dMhT+WLVWlQ5pM=\");\n\n_c = SongChoice;\nexport default SongChoice;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongChoice\");","map":{"version":3,"sources":["/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/SongChoice.js"],"names":["useEffect","useState","axios","env","localStorage","SongChoice","props","song","setSong","fetchSong","get","API_URL","id","then","response","data","console","log","title","genre"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB,C,CACA;AACA;;AACA,SAASC,YAAT,QAA6B,mBAA7B;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC,CAD0B,CAE1B;;AACA,QAAMQ,SAAS,GAAG,MAAM;AAExBP,IAAAA,KAAK,CAACQ,GAAN,CAAW,GAAEP,GAAG,CAACQ,OAAQ,UAASL,KAAK,CAACC,IAAN,CAAWK,EAAG,EAAhD,EACCC,IADD,CACOC,QAAD,IAAc;AACpBN,MAAAA,OAAO,CAACM,QAAQ,CAACC,IAAV,CAAP;AAEQC,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACC,IAAN,CAAWK,EAAvB,EAHY,CAIZ;;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAAT,CAAcR,IAA1B;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAN,MAAAA,OAAO,CAACM,QAAQ,CAACC,IAAT,CAAcR,IAAf,CAAP;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAAT,CAAcR,IAA1B;AACH,KAVL;AAWC,GAbD,CAH0B,CAiBtB;;;AAEJP,EAAAA,SAAS,CAACS,SAAD,EAAY,EAAZ,CAAT;AAEA,sBACI;AAAA,4BAEI;AAAA,4BAAaF,IAAI,CAACW,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,4BAAaX,IAAI,CAACY,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA7BD;;GAAMd,U;;KAAAA,U;AA8BN,eAAeA,UAAf","sourcesContent":["import {useEffect, useState} from 'react'\nimport axios from 'axios'\nimport env from 'react-dotenv'\n// import {useParams} from 'react-router-dom'\n// import {Link} from 'react-router-dom'\nimport { localStorage } from 'use-local-storage'\n\nconst SongChoice = (props) => {\n    const [song, setSong] = useState({})\n    // const params = useParams()\n    const fetchSong = () => {\n\n    axios.get(`${env.API_URL}/songs/${props.song.id}`)\n    .then((response) => {\n    setSong(response.data)\n\n            console.log(props.song.id)\n            // console.log(props.song.id)\n            console.log(response.data.song)\n            console.log(response)\n            setSong(response.data.song)\n            console.log(response.data.song)\n        })\n    }\n        // localStorage.setItem('title', response.data.song.title);        localStorage.setItem('genre', response.data.song.genre);\n\n    useEffect(fetchSong, [])\n\n    return (\n        <div>\n        {/* <h1>Created by Members of the Community!</h1> */}\n            <div>Title: {song.title}</div>\n            <div>Genre: {song.genre}</div>\n            {/* <Link to={`/songs/${props.id}/lyrics`}>View Lyrics</Link> */}\n        </div>\n    )\n}\nexport default SongChoice\n"]},"metadata":{},"sourceType":"module"}