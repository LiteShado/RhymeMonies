{"ast":null,"code":"var _jsxFileName = \"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/context/UserContext.js\",\n    _s = $RefreshSig$();\n\nimport { useState, createContext } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\n\nconst UserProvider = ({\n  children\n}) => {\n  _s();\n\n  const backEnd = process.env.REACT_APP_BACKEND;\n  const [user, setUser] = useState({});\n\n  const fetchUser = () => {\n    const userId = localStorage.getItem('userId');\n\n    if (userId) {\n      axios.get(`${backEnd}/users`, {\n        headers: {\n          Authorization: userId\n        }\n      }).then(response => setUser(response.data.user));\n    }\n  };\n\n  const state = {\n    userState: [user, setUser],\n    fetchUser: fetchUser\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: state,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserProvider, \"cCRtNmj6gRKVA5wOmLEmdl385z4=\");\n\n_c = UserProvider;\nexport { UserContext, UserProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/context/UserContext.js"],"names":["useState","createContext","axios","UserContext","UserProvider","children","backEnd","process","env","REACT_APP_BACKEND","user","setUser","fetchUser","userId","localStorage","getItem","get","headers","Authorization","then","response","data","state","userState"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,aAAlB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,WAAW,gBAAGF,aAAa,EAAjC;;AAEA,MAAMG,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACnC,QAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMY,SAAS,GAAG,MAAM;AACxB,UAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAf;;AACA,QAAIF,MAAJ,EAAY;AACRX,MAAAA,KAAK,CAACc,GAAN,CAAW,GAAEV,OAAQ,QAArB,EAA8B;AAC1BW,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAAEL;AADV;AADiB,OAA9B,EAIGM,IAJH,CAISC,QAAD,IAAcT,OAAO,CAACS,QAAQ,CAACC,IAAT,CAAcX,IAAf,CAJ7B;AAKH;AACJ,GATG;;AAWA,QAAMY,KAAK,GAAG;AACVC,IAAAA,SAAS,EAAE,CAACb,IAAD,EAAMC,OAAN,CADD;AAEVC,IAAAA,SAAS,EAAEA;AAFD,GAAd;AAMA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEU,KAA7B;AAAA,cACKjB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA1BD;;GAAMD,Y;;KAAAA,Y;AA4BN,SAASD,WAAT,EAAsBC,YAAtB","sourcesContent":["import {useState, createContext } from 'react'\nimport axios from 'axios'\n\n\nconst UserContext = createContext()\n\nconst UserProvider = ({ children }) => {\n    const backEnd = process.env.REACT_APP_BACKEND\n    const [user, setUser] = useState({})\n\n    const fetchUser = () => {\n    const userId = localStorage.getItem('userId')\n    if (userId) {\n        axios.get(`${backEnd}/users`, {\n            headers: {\n                Authorization: userId\n            }\n        }).then((response) => setUser(response.data.user))\n    }\n}\n\n    const state = {\n        userState: [user,setUser],\n        fetchUser: fetchUser\n    }\n\n\n    return (\n        <UserContext.Provider value={state}>\n            {children}\n        </UserContext.Provider>\n    )\n}\n\nexport { UserContext, UserProvider}\n"]},"metadata":{},"sourceType":"module"}