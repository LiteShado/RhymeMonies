{"ast":null,"code":"var _jsxFileName = \"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/Songs.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios'; // import Music from '../components/Music'\n\nimport { Link } from 'react-router-dom'; // import '../css/Music.css'\n\nimport env from 'react-dotenv';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Songs = () => {\n  _s();\n\n  const [allSongs, setAllSongs] = useState({});\n  const params = useParams();\n\n  const getAllSongs = () => {\n    axios.get(`${env.API_URL}/songs`).then(response => {\n      console.log(response);\n      setAllSongs(response.data);\n    });\n  };\n\n  useEffect(getAllSongs, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Check Out These from the Community!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), allSongs && allSongs.map((song, i) => {\n      /*#__PURE__*/\n      _jsxDEV(SongChoice, {\n        song: song,\n        preview: \"true\"\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this); // <Link to={`/songs/${params.id}/lyrics`}>View Lyrics</Link>\n\n\n      {\n        /* <button onClick={() => {\n           axios.get(`${env.API_URL}/songs/${params.id}`)\n        }}>View Song</button>\n        <button onClick={() => {\n           axios.get(`${env.API_URL}/songs/${params.id}/lyrics`)\n        }}>Add Lyrics</button> */\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Songs, \"ORmcfANc0mMByPp0vAWGA7OIJuQ=\", false, function () {\n  return [useParams];\n});\n\n_c = Songs;\nexport default Songs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Songs\");","map":{"version":3,"sources":["/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/Songs.js"],"names":["useEffect","useState","axios","Link","env","useParams","Songs","allSongs","setAllSongs","params","getAllSongs","get","API_URL","then","response","console","log","data","map","song","i","id"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAAQC,IAAR,QAAmB,kBAAnB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEhB,QAAK,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAMQ,MAAM,GAAGJ,SAAS,EAAxB;;AAGA,QAAMK,WAAW,GAAG,MAAM;AAEjBR,IAAAA,KAAK,CAACS,GAAN,CAAW,GAAEP,GAAG,CAACQ,OAAQ,QAAzB,EAAkCC,IAAlC,CAAwCC,QAAD,IAAc;AAClDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAN,MAAAA,WAAW,CAACM,QAAQ,CAACG,IAAV,CAAX;AACH,KAHA;AAIR,GAND;;AAQAjB,EAAAA,SAAS,CAACU,WAAD,EAAc,EAAd,CAAT;AAEA,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAECH,QAAQ,IAAIA,QAAQ,CAACW,GAAT,CAAa,CAACC,IAAD,EAAOC,CAAP,KAAa;AACnC;AAAA,cAAC,UAAD;AAEI,QAAA,IAAI,EAAED,IAFV;AAGI,QAAA,OAAO,EAAC;AAHZ,SACSA,IAAI,CAACE,EADd;AAAA;AAAA;AAAA;AAAA,eADmC,CAO/B;;;AAEA;AAAC;AACjB;AACA;AACA;AACA;AACA;AAA0C;AAC7B,KAfQ,CAFb;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CArCD;;GAAMf,K;UAGaD,S;;;KAHbC,K;AAsCN,eAAeA,KAAf","sourcesContent":["import {useEffect, useState} from 'react'\nimport axios from 'axios'\n// import Music from '../components/Music'\nimport {Link} from 'react-router-dom'\n// import '../css/Music.css'\nimport env from 'react-dotenv'\nimport {useParams} from 'react-router-dom'\n\n\nconst Songs = () => {\n\n    const[allSongs, setAllSongs] = useState({})\n    const params = useParams()\n\n\n    const getAllSongs = () => {\n\n             axios.get(`${env.API_URL}/songs`).then((response) => {\n                console.log(response)\n                setAllSongs(response.data)\n            })\n    }\n\n    useEffect(getAllSongs, [])\n\n    return (\n        <div>\n        <h1>Check Out These from the Community!</h1>\n        {allSongs && allSongs.map((song, i) => {\n            <SongChoice\n                key={song.id}\n                song={song}\n                preview=\"true\"\n            />\n\n                // <Link to={`/songs/${params.id}/lyrics`}>View Lyrics</Link>\n\n                {/* <button onClick={() => {\n                    axios.get(`${env.API_URL}/songs/${params.id}`)\n                }}>View Song</button>\n                <button onClick={() => {\n                    axios.get(`${env.API_URL}/songs/${params.id}/lyrics`)\n                }}>Add Lyrics</button> */}\n            })}\n        </div>\n    )\n}\nexport default Songs\n"]},"metadata":{},"sourceType":"module"}