{"ast":null,"code":"var _jsxFileName = \"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/Lyric.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios'; // import Music from '../components/Music'\n\nimport { Link } from 'react-router-dom'; // import '../css/Music.css'\n\nimport env from 'react-dotenv';\nimport { useParams, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Lyric = () => {\n  _s();\n\n  const [allLyric, setAllLyric] = useState({});\n  const params = useParams();\n  const history = useHistory();\n  const [shouldRedirect, setShouldRedirect] = useState(null);\n\n  const getAllLyric = () => {\n    axios.get(`${env.API_URL}/songs/${params.id}/lyrics`).then(response => {\n      console.log(response);\n      setAllLyric(response.data);\n    });\n  };\n\n  useEffect(getAllLyric, []);\n  const [lyric, setLyric] = useState({\n    lyric: ''\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setLyric({ ...lyric,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post(`${env.API_URL}/songs/${params.id}/lyrics`, lyric).then(response => {\n      console.log(response);\n    });\n    setShouldRedirect(response.data.id);\n  }; // .then(() ={\n  //     history.push('/songs/{params.id}')\n  //     {/* <button onClick={() => {\n  //     axios.get(`${env.API_URL}/songs/${params.id}`)\n  // }}>View Song</button>\n  // <button onClick={() => {\n  //     axios.get(`${env.API_URL}/songs/${params.id}/lyrics`)\n  // }}>Add Lyrics</button> */}\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Here Are the Lyrics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: allLyric.map(lyric => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/songs/${params.id}/lyrics`,\n                children: lyric.lyric\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this)\n            }, lyric.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: `/songs/${params.id}/lyrics`,\n              children: \"View Lyrics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add Your Lyrics:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"new-lyric\",\n            children: \"Lyrics:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"lyrics\",\n            name: \"lyric\",\n            value: lyric.lyric,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Lyric, \"HhKNR4bitGqIzWvpNpzQOqXgyKk=\", true, function () {\n  return [useParams];\n});\n\n_c = Lyric;\nexport default Lyric;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lyric\");","map":{"version":3,"sources":["/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/Lyric.js"],"names":["useEffect","useState","axios","Link","env","useParams","Redirect","Lyric","allLyric","setAllLyric","params","history","useHistory","shouldRedirect","setShouldRedirect","getAllLyric","get","API_URL","id","then","response","console","log","data","lyric","setLyric","handleChange","e","name","value","target","handleSubmit","preventDefault","post","map"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react'\nimport axios from 'axios'\n// import Music from '../components/Music'\nimport {Link} from 'react-router-dom'\n// import '../css/Music.css'\nimport env from 'react-dotenv'\nimport { useParams, Redirect } from 'react-router-dom'\n\nconst Lyric = () => {\n\n    const[allLyric,setAllLyric] = useState({})\n\n    const params = useParams()\n    const history = useHistory()\n    const [shouldRedirect, setShouldRedirect] =\n    useState(null)\n\n    const getAllLyric = () => {\n\n        axios.get(`${env.API_URL}/songs/${params.id}/lyrics`).then((response) => {\n           console.log(response)\n           setAllLyric(response.data)\n       })\n}\n    useEffect(getAllLyric, [])\n\n    const [lyric, setLyric] = useState({\n        lyric: ''\n    })\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n        setLyric({\n            ...lyric,\n            [name]: value\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        axios.post(`${env.API_URL}/songs/${params.id}/lyrics`, lyric).then((response) => {\n            console.log(response);\n        })\n        setShouldRedirect(response.data.id)\n        }\n\n\n    // .then(() ={\n    //     history.push('/songs/{params.id}')\n\n                //     {/* <button onClick={() => {\n                //     axios.get(`${env.API_URL}/songs/${params.id}`)\n                // }}>View Song</button>\n                // <button onClick={() => {\n                //     axios.get(`${env.API_URL}/songs/${params.id}/lyrics`)\n                // }}>Add Lyrics</button> */}\n\n        return (\n            <div>\n            <h1>Here Are the Lyrics</h1>\n            <ul>\n                <div>\n                    {allLyric.map((lyric) => {\n                        return (\n                        <div>\n                            <li key={lyric.id}>\n                                <Link to={`/songs/${params.id}/lyrics`}>{lyric.lyric}</Link>\n                            </li>\n                                <Link to={`/songs/${params.id}/lyrics`}>View Lyrics</Link>\n\n                            {/* <button onClick={() => {\n                                axios.get(`${env.API_URL}/songs/${params.id}`)\n                            }}>View Song</button>\n                            <button onClick={() => {\n                                axios.get(`${env.API_URL}/songs/${params.id}/lyrics`)\n                            }}>Add Lyrics</button> */}\n                        </div>\n                        )\n                        })}\n                        </div>\n                            <h1>Add Your Lyrics:</h1>\n                                <form onSubmit={handleSubmit}>\n                                    <div>\n                                        <label htmlFor=\"new-lyric\">Lyrics:</label>\n                                        <input type=\"text\" placeholder=\"lyrics\" name=\"lyric\" value={lyric.lyric} onChange={handleChange}\n                                        />\n                                    </div>\n\n                                    <div>\n                                        <input type=\"submit\" value=\"submit\" />\n                                    </div>\n\n                                </form>\n                            </ul>\n                            </div>\n        )\n}\nexport default Lyric\n"]},"metadata":{},"sourceType":"module"}