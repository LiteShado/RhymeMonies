{"ast":null,"code":"var _jsxFileName = \"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/SongChoice.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport env from 'react-dotenv'; // import {useParams} from 'react-router-dom'\n// import {Link} from 'react-router-dom'\n\nimport { localStorage } from 'use-local-storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SongChoice = props => {\n  _s();\n\n  const [song, setSong] = useState({}); // const params = useParams()\n\n  console.log(props);\n\n  const fetchSong = async () => {\n    const response = await axios.get(`${env.API_URL}/songs/${props.song.id}`);\n    console.log(props.song.id); // console.log(props.song.id)\n    // console.log(params.id)\n\n    console.log(response);\n    setSong(response.data.song);\n    console.log(response.data.song);\n    localStorage.setItem('title', response.data.song.title);\n    localStorage.setItem('genre', response.data.song.genre);\n  };\n\n  useEffect(() => {\n    fetchSong();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Title: \", song.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Genre: \", song.genre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SongChoice, \"VaAakcKOouOH8dMhT+WLVWlQ5pM=\");\n\n_c = SongChoice;\nexport default SongChoice;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongChoice\");","map":{"version":3,"sources":["/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/SongChoice.js"],"names":["useEffect","useState","axios","env","localStorage","SongChoice","props","song","setSong","console","log","fetchSong","response","get","API_URL","id","data","setItem","title","genre"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB,C,CACA;AACA;;AACA,SAASC,YAAT,QAA6B,mBAA7B;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC,CAD0B,CAE1B;;AAEAQ,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;;AAEA,QAAMK,SAAS,GAAG,YAAW;AACzB,UAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,GAAEV,GAAG,CAACW,OAAQ,UAASR,KAAK,CAACC,IAAN,CAAWQ,EAAG,EAAhD,CAAvB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACC,IAAN,CAAWQ,EAAvB,EAFyB,CAGzB;AACA;;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACAJ,IAAAA,OAAO,CAACI,QAAQ,CAACI,IAAT,CAAcT,IAAf,CAAP;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACI,IAAT,CAAcT,IAA1B;AACAH,IAAAA,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8BL,QAAQ,CAACI,IAAT,CAAcT,IAAd,CAAmBW,KAAjD;AAAgEd,IAAAA,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8BL,QAAQ,CAACI,IAAT,CAAcT,IAAd,CAAmBY,KAAjD;AAC/D,GATL;;AAYAnB,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,4BAEI;AAAA,4BAAaJ,IAAI,CAACW,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,4BAAaX,IAAI,CAACY,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA9BD;;GAAMd,U;;KAAAA,U;AA+BN,eAAeA,UAAf","sourcesContent":["import {useEffect, useState} from 'react'\nimport axios from 'axios'\nimport env from 'react-dotenv'\n// import {useParams} from 'react-router-dom'\n// import {Link} from 'react-router-dom'\nimport { localStorage } from 'use-local-storage'\n\nconst SongChoice = (props) => {\n    const [song, setSong] = useState({})\n    // const params = useParams()\n\n    console.log(props)\n\n    const fetchSong = async() => {\n        const response = await axios.get(`${env.API_URL}/songs/${props.song.id}`)\n        console.log(props.song.id)\n        // console.log(props.song.id)\n        // console.log(params.id)\n        console.log(response)\n        setSong(response.data.song)\n        console.log(response.data.song)\n        localStorage.setItem('title', response.data.song.title);        localStorage.setItem('genre', response.data.song.genre)\n        }\n\n\n    useEffect(() => {\n        fetchSong()\n    }, [])\n\n    return (\n        <div>\n        {/* <h1>Created by Members of the Community!</h1> */}\n            <div>Title: {song.title}</div>\n            <div>Genre: {song.genre}</div>\n            {/* <Link to={`/songs/${props.id}/lyrics`}>View Lyrics</Link> */}\n        </div>\n    )\n}\nexport default SongChoice\n"]},"metadata":{},"sourceType":"module"}