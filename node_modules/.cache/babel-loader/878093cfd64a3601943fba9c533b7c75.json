{"ast":null,"code":"var _jsxFileName = \"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/New.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst New = () => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [genre, setGenre] = useState('');\n\n  const addSong = async e => {\n    e.preventDefault();\n\n    try {\n      let auth = localStorage.getItem('userId');\n      let res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/songs`, {\n        title: title,\n        genre: genre\n      }, {\n        headers: {\n          authorization: auth\n        }\n      });\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const [song, setSong] = useState({\n    title: '',\n    genre: ''\n  });\n\n  const handleChange = e => {\n    setSong({ ...song,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Submit a New Song to the Community!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addSong,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"new-title\",\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"title\",\n            name: \"title\",\n            value: song.title,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"new-genre\",\n            children: \"Genre:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"genre\",\n            name: \"genre\",\n            value: song.genre,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(New, \"E1Fg5oMfAcKJQcQQTIDOy6LBTRQ=\");\n\n_c = New;\nexport default New;\n\nvar _c;\n\n$RefreshReg$(_c, \"New\");","map":{"version":3,"sources":["/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/New.js"],"names":["useState","axios","New","title","setTitle","genre","setGenre","addSong","e","preventDefault","auth","localStorage","getItem","res","post","process","env","REACT_APP_BACKEND_URL","headers","authorization","console","log","error","song","setSong","handleChange","target","name","value"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMO,OAAO,GAAG,MAAOC,CAAP,IAAa;AACzBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACA,UAAIC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX;AACA,UAAIC,GAAG,GAAG,MAAMZ,KAAK,CAACa,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,qBAAsB,QAAhD,EAEhB;AACId,QAAAA,KAAK,EAAEA,KADX;AAEIE,QAAAA,KAAK,EAAEA;AAFX,OAFgB,EAMhB;AACIa,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAACT;AADT;AADb,OANgB,CAAhB;AAYAU,MAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACH,KAfD,CAeE,OAAOS,KAAP,EAAc;AACbF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACF;AACJ,GApBD;;AAsBA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC;AAC7BG,IAAAA,KAAK,EAAE,EADsB;AAE7BE,IAAAA,KAAK,EAAE;AAFsB,GAAD,CAAhC;;AAMA,QAAMoB,YAAY,GAAIjB,CAAD,IAAO;AACxBgB,IAAAA,OAAO,CAAC,EACJ,GAAGD,IADC;AAEJ,OAACf,CAAC,CAACkB,MAAF,CAASC,IAAV,GAAiBnB,CAAC,CAACkB,MAAF,CAASE;AAFtB,KAAD,CAAP;AAIH,GALD;;AASA,sBACI;AAAA,2BACA;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAM,QAAA,QAAQ,EAAErB,OAAhB;AAAA,gCACI;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC,OAA/B;AAAuC,YAAA,IAAI,EAAC,OAA5C;AAAoD,YAAA,KAAK,EAAEgB,IAAI,CAACpB,KAAhE;AAAuE,YAAA,QAAQ,EAAEsB;AAAjF;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC,OAA/B;AAAuC,YAAA,IAAI,EAAC,OAA5C;AAAoD,YAAA,KAAK,EAAEF,IAAI,CAAClB,KAAhE;AAAuE,YAAA,QAAQ,EAAEoB;AAAjF;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAYQ;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAZR;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CA/DD;;GAAMvB,G;;KAAAA,G;AAiEN,eAAeA,GAAf","sourcesContent":["import {useState} from 'react'\nimport axios from 'axios'\n\nconst New = () => {\n    const [title, setTitle] = useState('')\n    const [genre, setGenre] = useState('')\n\n    const addSong = async (e) => {\n        e.preventDefault()\n        try {\n            let auth = localStorage.getItem('userId')\n            let res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/songs`,\n\n            {\n                title: title,\n                genre: genre\n            },\n            {\n                headers: {\n                    authorization:auth\n                }\n            })\n\n            console.log(res)\n        } catch (error) {\n           console.log(error)\n        }\n    }\n\n    const [song, setSong] = useState({\n        title: '',\n        genre: ''\n\n    })\n\n    const handleChange = (e) => {\n        setSong({\n            ...song,\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n\n    return (\n        <div>\n        <>\n        <h1>Submit a New Song to the Community!</h1>\n        <form onSubmit={addSong}>\n            <div>\n                <label htmlFor=\"new-title\">Title:</label>\n                <input type=\"text\" placeholder=\"title\" name=\"title\" value={song.title} onChange={handleChange}\n                />\n            </div>\n\n            <div>\n                <label htmlFor=\"new-genre\">Genre:</label>\n                <input type=\"text\" placeholder=\"genre\" name=\"genre\" value={song.genre} onChange={handleChange}\n                />\n            </div>\n                <input type=\"submit\" value=\"submit\" />\n\n        </form>\n        </>\n        </div>\n    )\n}\n\nexport default New\n"]},"metadata":{},"sourceType":"module"}