[{"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/index.js":"1","/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/App.js":"2","/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/reportWebVitals.js":"3","/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/New.js":"4","/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/components/Navbar.js":"5","/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/Signup.js":"6","/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/Login.js":"7","/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/MySongs.js":"8","/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/context/UserContext.js":"9","/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/Profile.js":"10","/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/Home.js":"11","/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/SongChoice.js":"12","/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/Lyric.js":"13","/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/Songs.js":"14","/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/useLocalStorage.js":"15"},{"size":696,"mtime":1619753349739,"results":"16","hashOfConfig":"17"},{"size":3940,"mtime":1620223863282,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1619747245671,"results":"19","hashOfConfig":"17"},{"size":2117,"mtime":1620223051275,"results":"20","hashOfConfig":"17"},{"size":1324,"mtime":1620223872720,"results":"21","hashOfConfig":"17"},{"size":1763,"mtime":1620214861603,"results":"22","hashOfConfig":"17"},{"size":1501,"mtime":1620218835013,"results":"23","hashOfConfig":"17"},{"size":2332,"mtime":1620224846976,"results":"24","hashOfConfig":"17"},{"size":863,"mtime":1620094910670,"results":"25","hashOfConfig":"17"},{"size":3659,"mtime":1620219089154,"results":"26","hashOfConfig":"17"},{"size":219,"mtime":1619929860698,"results":"27","hashOfConfig":"17"},{"size":915,"mtime":1620220978104,"results":"28","hashOfConfig":"17"},{"size":4828,"mtime":1620214843601,"results":"29","hashOfConfig":"17"},{"size":1379,"mtime":1620210291806,"results":"30","hashOfConfig":"17"},{"size":399,"mtime":1619991780399,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"gcspd2",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/index.js",[],["69","70"],"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/App.js",["71"],"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/reportWebVitals.js",[],"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/New.js",["72"],"import {useState, useContext} from 'react'\nimport {UserContext} from '../context/UserContext'\nimport axios from 'axios'\nimport '../css/Login.css'\nimport env from 'react-dotenv'\n\nconst New = (props) => {\n    const {userState} = useContext(UserContext)\n    const [song,setSong] = userState\n\n    const [title,setTitle] = useState('')\n    const [genre,setGenre] = useState('')\n    const [userId, setUserId] = useState('')\n\n    const newSong = async (e) => {\n        e.preventDefault()\n        // let user = localStorage.getItem('userId')\n        let userId = localStorage.getItem('userId')\n        console.log(userId)\n\n        let res = await axios.post(`${env.API_URL}/songs/new`, {\n            title: title,\n            genre: genre,\n            id: userId\n        })\n        console.log(res)\n        localStorage.setItem('title', res.data.song.title)\n        localStorage.setItem('genre', res.data.song.genre)\n\n        setSong(res.data.song)\n        // localStorage.setItem('userId', res.data.user.id)\n    }\n\n    return (\n            <div className=\"newSongContainer\">\n                <h1>Add Your Song to the Community!</h1>\n                <form onSubmit={newSong}>\n                    <input name=\"title\" type=\"text\" placeholder=\"Title\" value={title} onChange={(e) => setTitle(e.target.value)} />\n\n                    {/* <input name=\"title\" type=\"text\" placeholder=\"Title\" value={genre} onChange={(e) => setGenre(e.target.value)} /> */}\n\n                    <label for=\"genre\">Choose your Genre:</label>\n\n                    <select name=\"genre\" value={genre} onChange={(e) => setGenre(e.target.value)}>\n                        <option name=\"Hip Hop\">Hip Hop</option>\n                        <option name=\"Rap\">Rap</option>\n                        <option name=\"Pop\">Pop</option>\n                        <option name=\"RnB\">RnB</option>\n                    </select>\n                    <input name=\"userId\" type=\"hidden\" value={userId} onChange={(e) => setUserId(e.target.value)} />\n\n                    <input type=\"submit\" value=\"submit\" />\n                </form>\n            </div>\n    )\n}\n\nexport default New\n","/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/components/Navbar.js",["73"],"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/Signup.js",["74"],"import {useState, useContext} from 'react'\nimport {UserContext} from '../context/UserContext'\nimport axios from 'axios'\nimport '../css/Login.css'\nimport env from 'react-dotenv'\n\nconst Signup = () => {\n    const {userState} = useContext(UserContext)\n    const [user,setUser] = userState\n\n    const [name,setName] = useState('')\n    const [email,setEmail] = useState('')\n    const [password,setPassword] = useState('')\n\n    const signupSubmit = async (e) => {\n        e.preventDefault()\n\n        let res = await axios.post(`${env.API_URL}/users/new`, {\n            name: name,\n            email: email,\n            password: password\n        })\n        console.log(res)\n        console.log(res.headers)\n        console.log(res.headers.authorization)\n        localStorage.setItem('name', res.data.user.name)\n        localStorage.setItem('userId', res.data.user.id)\n        localStorage.setItem('id', res.data.user.id)\n        localStorage.setItem('email', res.data.user.email)\n        localStorage.setItem('password', res.data.user.password)\n\n        setUser(res.data.user)\n    }\n\n    return (\n        <div>\n            <div className=\"loginContainer\">\n                <h1>Sign Up for RhymeMonies!</h1>\n                <form onSubmit={signupSubmit}>\n                    <input type=\"text\" placeholder=\"Name\" value={name} onChange={(e) => setName(e.target.value)} />\n\n                    <input type=\"text\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n                    <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n                    <input type=\"submit\" value=\"submit\" />\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Signup\n","/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/Login.js",[],"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/MySongs.js",["75"],"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/context/UserContext.js",["76"],"import {useState, createContext } from 'react'\nimport axios from 'axios'\nimport env from 'react-dotenv'\n// import { UserProvider } from './contexts/UserContext'\n\nconst UserContext = createContext()\n\nconst UserProvider = ({ children }) => {\n    const backEnd = process.env.REACT_APP_BACKEND\n    const [user, setUser] = useState({})\n\n    const fetchUser = () => {\n    const userId = localStorage.getItem('userId')\n    if (userId) {\n        axios.get(`${backEnd}/users`, {\n            headers: {\n                Authorization: userId\n            }\n        }).then((response) => setUser(response.data.user))\n    }\n}\n\n    const state = {\n        userState: [user,setUser],\n        fetchUser: fetchUser\n    }\n\n\n    return (\n        <UserContext.Provider value={state}>\n            {children}\n        </UserContext.Provider>\n    )\n}\n\nexport { UserContext, UserProvider}\n","/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/Profile.js",["77","78","79"],"import {useEffect, useState, userState} from 'react'\nimport axios from 'axios'\n// import Music from '../components/Music'\n// import '../css/Music.css'\nimport env from 'react-dotenv'\n// import SongChoice from '../pages/SongChoice'\n// import { Link, useParams } from 'react-router-dom'\n\n\nconst Profile = () => {\n\n    const[profile, setProfile] = useState(null)\n    const id = localStorage.getItem('id')\n    const name = localStorage.getItem('name')\n    const email = localStorage.getItem('email')\n    const password = localStorage.getItem('password')\n    const [newName,setNewName] = useState(null)\n    const [newEmail,setNewEmail] = useState(null)\n    const [newPassword, setNewPassword] = useState('')\n    const [newProfile, setNewProfile] = useState(null)\n\n    console.log(id)\n    console.log(name)\n\n\n    const getProfile = async() => {\n        const res = await {id, name, email, password}\n        setProfile(res)\n        console.log(res)\n    }\n    // const getProfile = async() => {\n    //         try {\n    //         const res = await axios.get(`${env.API_URL}/users/profile`)\n    //         setProfile(res.data)\n    //         console.log(res)\n    //         console.log(res.data)\n    //         console.log(props.song.id)\n    //         // console.log(props.song.id)\n    //         console.log(res.data.song)\n    //         console.log(res)\n    //         setProfile(res.data.song)\n    //         console.log(res.data.song)\n\n    //         } catch (error) {\n    //             console.log(error)\n    //         }\n    // }\n\n    useEffect(() => {\n        getProfile()\n    }, [])\n\nconsole.log(profile)\n\nconst editSubmit = async (e) => {\n    let newPassword = localStorage.getItem('password')\n    let newEmail = localStorage.getItem('email')\n    try {\n    let ress = await axios.put(`${env.API_URL}/users/edit`, {\n        name: newName,\n        email: newEmail,\n        password: newPassword,\n    })\n        setNewProfile(ress)\n        console.log(ress)\n\n    } catch (error) {\n        console.log(error)\n    }\n}\nconst handleDelete = async (e) => {\n    try {\n        let resss = await axios.delete(`${env.API_URL}/users/delete`, {\n        email: email\n    })\n    console.log(resss)\n    localStorage.clear()\n    window.location.reload();\n\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nreturn (\n    <>\n        <h1>Your Profile Details:</h1>\n        <>\n            {(profile) => {\n                    <div className=\"profile\">\n                            <h2>Name:\n                            {profile.name}</h2>\n                            <h2>Password:\n                            {profile.email}</h2>\n                    </div>\n            }}\n        </>\n\n            <h1>Edit Your Community Alias: </h1>\n                <form onSubmit={editSubmit}>\n                    <input name=\"newName\" placeholder=\"Name\" type=\"text\" value={newName} onChange={(e) => setNewName(e.target.value)} />\n\n                    <input name=\"newEmail\" placeholder=\"Email\" type=\"hidden\" value={newEmail} onChange={(e) => setNewEmail(e.target.value)} />\n\n                    <input name=\"newPassword\" type=\"hidden\" placeholder=\"UserId\" value={newPassword} onChange={(e) => setNewPassword(e.target.value)} />\n\n                    <input type=\"submit\" value=\"submit\" />\n                </form>\n\n            <h3 className=\"deleteTitle\"> Delete My Profile </h3>\n                <form onSubmit={handleDelete}>\n                    <input name=\"newEmail\" type=\"hidden\" value={email} onChange={(e) => setNewEmail(e.target.value)} />\n\n                    <button type=\"submit\" value=\"submit\">delete</button>\n                </form>\n        </>\n\n    )\n}\n\nexport default Profile\n","/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/Home.js",[],"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/SongChoice.js",["80"],"import {useEffect, useState} from 'react'\nimport axios from 'axios'\nimport env from 'react-dotenv'\nimport {Link} from 'react-router-dom'\n\n\nconst SongChoice = (props) => {\n    const [song, setSong] = useState({})\n    console.log(props)\n\n    const fetchSong = async() => {\n        const response = await axios.get(`${env.API_URL}/songs/${props.song.id}`)\n        console.log(props)\n        setSong(response.data.song)\n        console.log(response.data.song)\n        }\n\n        useEffect(() => {\n            fetchSong()\n        }, [])\n\n        console.log(song)\n        // console.log(props)\n\n    return (\n        <div>\n        {/* <h1>Created by Members of the Community!</h1> */}\n\n            {/* <div>Title: {song.title}</div>\n            <div>Genre: {song.genre}</div> */}\n            <Link to={`/lyrics/${props.song.id}`} className=\"viewLyrics\">View Lyrics</Link>\n        </div>\n    )\n}\nexport default SongChoice\n","/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/Lyric.js",["81","82","83","84"],"import {useEffect, useState, useContext} from 'react'\nimport {UserContext} from '../context/UserContext'\nimport axios from 'axios'\n// import Music from '../components/Music'\n// import '../css/Music.css'\nimport env from 'react-dotenv'\n\n\nconst Lyric = (props) => {\n\n    const {userState} = useContext(UserContext)\n    const [song,setSong] = userState\n    const [testLyric,setTestLyric] = useState('')\n\n\n\n    const [lyric,setLyric] = useState(null)\n    const [userId,setUserId] = useState('')\n    const [songId,setSongId] = useState('')\n    // console.log(props.match.params.id)\n    console.log(props)\n\n    const [lyrics, setLyrics] = useState('')\n\n    const get = async() => {\n        try {\n\n        const lyric = await axios.get(`${env.API_URL}/lyrics/${props.match.params.id}`)\n\n        console.log(lyric)\n\n        let i\n\n        const array = lyric.data.lyrics\n        setLyric(array)\n        console.log(array)\n\n\n        for (i = 0; i<array.length; i++) {\n            console.log(array[i].lyric)\n            // setLyric(array[i].lyric)\n            console.log(lyric)\n        }\n\n        console.log(array)\n\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    useEffect(() => {\n        get()\n    }, [])\n\n\n    const signupSubmit = async (e) => {\n        e.preventDefault()\n        // let user = localStorage.getItem('userId')\n        let id = localStorage.getItem('userId')\n        let idd = props.match.params.id\n\n\n        console.log(id)\n        console.log(idd)\n\n\n        console.log(get)\n\n        let res = await axios.post(`${env.API_URL}/lyrics/${props.match.params.id}`, {\n            lyric: testLyric,\n            userId: id,\n            songId: idd\n        })\n        console.log(res)\n        // localStorage.setItem('lyric', res.data.song.lyric)\n\n        setSong(res.data.song)\n    }\n\n    return (\n        <>\n                <h1>Check Out These Lyrics!!</h1>\n            <>\n\n                {lyric && lyric.map((res, i) => {\n                    console.log(lyrics)\n\n                return (\n                    <li className=\"lyricList\" key={res.id}>\n                        {res.lyric}\n                    </li>\n                )\n                })}\n            </>\n\n\n                <h1>Add Your Lyrics To The Song!</h1>\n                <form onSubmit={signupSubmit}>\n                    <input name=\"lyric\" type=\"text\" value={testLyric} onChange={(e) => setTestLyric(e.target.value)} />\n\n                    <input name=\"userId\" type=\"hidden\" placeholder=\"UserId\" value={userId} onChange={(e) => setUserId(e.target.value)} />\n\n                    <input name=\"songId\" type=\"hidden\" placeholder=\"SongId\" value={songId} onChange={(e) => setUserId(e.target.value)} />\n\n                    <input type=\"submit\" value=\"submit\" />\n                </form>\n\n        </>\n    )\n\n\n//         axios.get(`${env.API_URL}/songs/${params.id}/lyrics`).then((response) => {\n//            console.log(response)\n//            setAllLyric(response.data)\n//        })\n// }\n//     useEffect(getAllLyric, [])\n\n//     const [lyric, setLyric] = useState({\n//         lyric: ''\n//     })\n\n//     const handleChange = (e) => {\n//         const { name, value } = e.target\n//         setLyric({\n//             ...lyric,\n//             [name]: value\n//         })\n//     }\n\n//     const handleSubmit = (e) => {\n        // e.preventDefault()\n//         axios.post(`${env.API_URL}/songs/${params.id}/lyrics`, lyric).then((response) => {\n//             console.log(response);\n//         })\n//         setShouldRedirect(response.data.id)\n//         }\n\n// const [lyric, setLyric] = useState({})\n\n\n\n        // return (\n            // <div>\n            // <h1>Here Are the Lyrics</h1>\n            // <ul>\n            //     <div>\n            //         {allLyric.map((lyric) => {\n            //             return (\n            //             <div>\n            //                 <li key={lyric.id}>\n            //                     <Link to={`/songs/${params.id}/lyrics`}>{lyric.lyric}</Link>\n            //                 </li>\n            //                     <Link to={`/songs/${params.id}/lyrics`}>View Lyrics</Link>\n\n            //             </div>\n            //             )\n            //             })}\n            //             </div>\n                // <h1>Add Your Lyrics:</h1>\n                //     <form onSubmit={handleSubmit}>\n                //         <div>\n                //             <label htmlFor=\"new-lyric\">Lyrics:</label>\n                //             <input type=\"text\" placeholder=\"lyrics\" name=\"lyric\" value={lyric.lyric} onChange={handleChange}\n                //             />\n                //         </div>\n\n                //     <input type=\"submit\" value=\"submit\" />\n\n                //     </form>\n       // </ul>\n            // </div>\n//         )\n\n}\nexport default Lyric\n","/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/pages/Songs.js",[],"/Users/NatRichmond/LiteShado, Inc./General Assembly/RhymeMonies/RhymeMonies-frontend/rhymemonies/src/useLocalStorage.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":56,"column":6,"nodeType":"91","endLine":56,"endColumn":8,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":9,"column":12,"nodeType":"95","messageId":"96","endLine":9,"endColumn":16},{"ruleId":"93","severity":1,"message":"97","line":1,"column":9,"nodeType":"95","messageId":"96","endLine":1,"endColumn":17},{"ruleId":"93","severity":1,"message":"98","line":9,"column":12,"nodeType":"95","messageId":"96","endLine":9,"endColumn":16},{"ruleId":null,"fatal":true,"severity":2,"message":"99","line":54,"column":5},{"ruleId":"93","severity":1,"message":"100","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":11},{"ruleId":"93","severity":1,"message":"101","line":1,"column":30,"nodeType":"95","messageId":"96","endLine":1,"endColumn":39},{"ruleId":"93","severity":1,"message":"102","line":20,"column":12,"nodeType":"95","messageId":"96","endLine":20,"endColumn":22},{"ruleId":"89","severity":1,"message":"103","line":51,"column":8,"nodeType":"91","endLine":51,"endColumn":10,"suggestions":"104"},{"ruleId":"89","severity":1,"message":"105","line":20,"column":12,"nodeType":"91","endLine":20,"endColumn":14,"suggestions":"106"},{"ruleId":"93","severity":1,"message":"94","line":12,"column":12,"nodeType":"95","messageId":"96","endLine":12,"endColumn":16},{"ruleId":"93","severity":1,"message":"107","line":19,"column":19,"nodeType":"95","messageId":"96","endLine":19,"endColumn":28},{"ruleId":"93","severity":1,"message":"108","line":23,"column":20,"nodeType":"95","messageId":"96","endLine":23,"endColumn":29},{"ruleId":"89","severity":1,"message":"109","line":54,"column":8,"nodeType":"91","endLine":54,"endColumn":10,"suggestions":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.","ArrayExpression",["113"],"no-unused-vars","'song' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'user' is assigned a value but never used.","Parsing error: Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\n\n\u001b[0m \u001b[90m 52 |\u001b[39m                 \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mform\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 53 |\u001b[39m     \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 54 |\u001b[39m     \u001b[33m<\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 55 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m className\u001b[33m=\u001b[39m\u001b[32m\"mySongs\"\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 56 |\u001b[39m         \u001b[33m<\u001b[39m\u001b[33mh1\u001b[39m\u001b[33m>\u001b[39m\u001b[33mHere\u001b[39m \u001b[33mAre\u001b[39m \u001b[33mYour\u001b[39m \u001b[33mSongs\u001b[39m\u001b[33m!\u001b[39m\u001b[33m!\u001b[39m\u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mh1\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 57 |\u001b[39m         {\u001b[90m/* {allSongs && allSongs.map((res, i) => { */\u001b[39m}\u001b[0m","'env' is defined but never used.","'userState' is defined but never used.","'newProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProfile'. Either include it or remove the dependency array.",["114"],"React Hook useEffect has a missing dependency: 'fetchSong'. Either include it or remove the dependency array.",["115"],"'setSongId' is assigned a value but never used.","'setLyrics' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'get'. Either include it or remove the dependency array.",["116"],"no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [userInfo]",{"range":"125","text":"126"},"Update the dependencies array to be: [getProfile]",{"range":"127","text":"128"},"Update the dependencies array to be: [fetchSong]",{"range":"129","text":"130"},"Update the dependencies array to be: [get]",{"range":"131","text":"132"},[1179,1181],"[userInfo]",[1580,1582],"[getProfile]",[528,530],"[fetchSong]",[1225,1227],"[get]"]